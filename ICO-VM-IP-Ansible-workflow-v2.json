[
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.",
      "Label": "IPv4 Address",
      "Name": "IpV4AddressType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv4 Address",
          "Name": "IpV4Address",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": "^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "An IPv4 subnet mask represented in dot decimal notation, such as '255.255.255.0'.",
      "Label": "IPv4 Subnet Mask",
      "Name": "IpV4SubnetMaskType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "An IPv4 subnet mask represented in dot decimal notation, such as '255.255.255.0'.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv4 Subnet Mask",
          "Name": "IpV4SubnetMaskType",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": "^(((255.){3}(255|254|252|248|240|224|192|128|0))|((255.){2}(255|254|252|248|240|224|192|128|0).0)|((255.)(255|254|252|248|240|224|192|128|0)(.0){2})|((255|254|252|248|240|224|192|128|0+)(.0){3}))$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "An IPv6 address represented as eight groups of four hexadecimal digits, separated by colons, such as '2001:0db8:85a3:0000:0000:8a2e:0370:7334'.",
      "Label": "IPv6 Address",
      "Name": "IpV6AddressType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "An IPv6 address represented as eight groups of four hexadecimal digits, separated by colons, such as '2001:0db8:85a3:0000:0000:8a2e:0370:7334'.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv6 Address",
          "Name": "IpV6Address",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": "^(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "CompositeType": true,
      "Description": "A network interface consisting of IPv4 address, IPv4 subnet mask and IPv4 gateway.",
      "Label": "Network Interface Type",
      "Name": "NetworkInterfacesType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "IPv4 IP address to be configured for the virtual machine’s guest operating system. Leave it blank for DHCP.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv4 IP address",
          "Name": "Ipv4Address",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "IpV4AddressType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "IPv4 Subnet Mask to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv4 Subnet Mask",
          "Name": "Ipv4subnetmask",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "IpV4SubnetMaskType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "IPv4 Gateway to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv4 Gateway",
          "Name": "Ipv4Gateway1",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "IpV4AddressType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "IPv6 Address to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv6 IP Address",
          "Name": "Ipv6Address",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "IpV6AddressType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "IPv6 subnet prefix to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv6 Subnet Prefix",
          "Name": "Ipv6subnetmask",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "integer"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "IPv6 Gateway to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IPv6 Gateway",
          "Name": "Ipv6Gateway1",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "IpV6AddressType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Type definition for a Datacenter",
      "Label": "Datacenter",
      "Name": "HypervisorDatacenterType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Datacenter",
          "Name": "Datacenter",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name",
                  "InventoryPath"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatacenter)&$orderby=Name",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "InventoryPath"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Type definition for a Cluster.",
      "Label": "Cluster",
      "Name": "HypervisorClusterType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Cluster",
          "Name": "Cluster",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name",
                  "InventoryPath"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseCluster)&$orderby=Name",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "InventoryPath"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Type definition for a Hypervisor Host.",
      "Label": "ESXi Host",
      "Name": "HypervisorHostType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Host",
          "Name": "Host",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "Max": 255,
              "Min": 1,
              "ObjectType": "workflow.Constraints",
              "Regex": "^(([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)|[a-zA-Z0-9]+([a-zA-Z0-9-._]*[a-zA-Z0-9]))$"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseHost)&$orderby=Name",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "Name"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Type definition for a Folder",
      "Label": "VM and Template Folder",
      "Name": "VmAndTemplateFolderType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Folder",
          "Name": "Folder",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name",
                  "InventoryPath"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseFolder)and(TypeofFolder eq 'VMTemplateFolder')and(Internal eq 'false') &$orderby=Name",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "InventoryPath"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Type definition for a Datastore.",
      "Label": "Datastore",
      "Name": "HypervisorDatastoreType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Datastore",
          "Name": "Datastore",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name",
                  "InventoryPath"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatastore)&$orderby=Name",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "InventoryPath"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Definition for a Virtual Machine Network",
      "Label": "Network",
      "Name": "Network",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Network",
          "Name": "Network",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name",
                  "Host.Name",
                  "VirtualSwitch.Name",
                  "DistributedSwitch.Name"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseNetwork)and(IndexMotypes ne virtualization.BaseKernelNetwork)and(('ClassId' eq 'virtualization.VmwareNetwork') or (('ClassId' eq 'virtualization.VmwareDistributedNetwork')and('UpLink' eq 'false')))&$expand=Host($select=Name),VirtualSwitch($select=Name),DistributedSwitch($select=Name)&$orderby=Name",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "Name"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Type definition for a VirtualMachine.",
      "Label": "VirtualMachine",
      "Name": "VirtualMachineType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "VirtualMachine",
          "Name": "VirtualMachine",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name",
                  "InventoryPath",
                  "PowerState",
                  "Host.Name",
                  "GuestInfo.OperatingSystem"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseVirtualMachine)and(IsTemplate eq 'false')&$expand=Host($select=Name)&$orderby=Name",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "InventoryPath"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Type definition for a Public Cloud Virtual Machine.",
      "Label": "Cloud Virtual Machine Details",
      "Name": "CloudVirtualMachineType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "VirtualMachine",
          "Name": "VirtualMachine",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "Max": 80,
              "Min": 1,
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [
              {
                "DisplayAttributes": [
                  "Name",
                  "Identity",
                  "Region.RegionId"
                ],
                "ObjectType": "workflow.MoReferenceProperty",
                "Selector": "/api/v1/cloud/AwsVirtualMachines?$filter=(State ne Terminated)",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "ValueAttribute": "Identity"
              }
            ],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "CompositeType": true,
      "Description": "Platforms supported for virtualization target devices",
      "Label": "Virtualization Platform Type",
      "Name": "VirtualizationPlatformType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [
        {
          "Condition": "eq",
          "ControlParameter": "VirtualizationPlatformType",
          "EnableParameters": [
            "VmIdentity"
          ],
          "Name": "ShowParamsForAmazonWebService",
          "ObjectType": "workflow.ParameterSet",
          "Value": "AmazonWebService"
        },
        {
          "Condition": "eq",
          "ControlParameter": "VirtualizationPlatformType",
          "EnableParameters": [
            "VM",
            "ForceDelete"
          ],
          "Name": "ShowParamsForHyperFlexAP",
          "ObjectType": "workflow.ParameterSet",
          "Value": "HyperFlexAP"
        },
        {
          "Condition": "eq",
          "ControlParameter": "VirtualizationPlatformType",
          "EnableParameters": [
            "VM",
            "Datacenter",
            "Folder",
            "ForceDelete"
          ],
          "Name": "ShowParamsForVmwareVcenter",
          "ObjectType": "workflow.ParameterSet",
          "Value": "VmwareVcenter"
        },
        {
          "Condition": "eq",
          "ControlParameter": "VirtualizationPlatformType",
          "EnableParameters": [
            "VM",
            "ForceDelete"
          ],
          "Name": "ShowParamsForIWE",
          "ObjectType": "workflow.ParameterSet",
          "Value": "IWE"
        }
      ],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Platform type for virtualization target device",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Virtualization Platform Type",
          "Name": "VirtualizationPlatformType",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [
                {
                  "Label": "PlatformType AmazonWebService",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "AmazonWebService"
                },
                {
                  "Label": "PlatformType HyperFlexAP",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "HyperFlexAP"
                },
                {
                  "Label": "PlatformType VmwareVcenter",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "VmwareVcenter"
                },
                {
                  "Label": "PlatformType IWE",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "IWE"
                }
              ],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "enum"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Name of the virtual machine to be deleted",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Virtual Machine",
          "Name": "VM",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "VirtualMachineType",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Identity of the virtual machine to be deleted",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Cloud Virtual Machine",
          "Name": "VmIdentity",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "CloudVirtualMachineType",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Datacenter in which the virtual machine resides",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Datacenter",
          "Name": "Datacenter",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "HypervisorDatacenterType",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Folder in which the virtual machine resides",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Folder",
          "Name": "Folder",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "VmAndTemplateFolderType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "If selected, virtual machine will be powered off and then deleted safely",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Force Delete",
          "Name": "ForceDelete",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "boolean"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Deletes a virtual machine",
      "Label": "Remove Virtual Machine",
      "Name": "RemoveVirtualMachine",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "HypervisorManager",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "ConnectorAttribute": "Moid",
                "ConstraintAttributes": [
                  "PlatformType"
                ],
                "DisplayAttributes": [
                  "DeviceHostname",
                  "PlatformType",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType in ('HyperFlexAP', 'IWE', 'VmwareVcenter', 'AmazonWebService')",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.DeviceRegistration"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Platform type of the Virtualization device",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtualization Platform Type",
            "Name": "VirtualizationPlatformType",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualizationPlatformType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine to be deleted",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "VM",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "If selected, virtual machine will be powered off and then deleted safely",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Force Delete",
            "Name": "ForceDelete",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          }
        ],
        "RetryCount": 50,
        "RetryDelay": 15,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 120,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "category",
          "Value": "Virtualization"
        },
        {
          "Key": "platformType.VmwareVcenter",
          "Value": "true"
        },
        {
          "Key": "platformType.AmazonWebService",
          "Value": "true"
        }
      ],
      "Version": 3
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Create new virtual machine on the selected Hypervisor based on specifications in a virtual machine or template file. The inputs cluster (or host), datastore, and template name or virtual machine are mandatory. If folder name is specified, then virtual machine will be placed within the folder. On successful execution, name of virtual machine and template name or virtual machine are generated as outputs.",
      "Label": "New Virtual Machine from Template or Clone from Virtual Machine",
      "Name": "NewVirtualMachineFromTemplate",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "Vcenter",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "DeviceHostname",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                }
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Datacenter where the virtual machine will be provisioned.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datacenter",
            "Name": "Datacenter",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatacenterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Cluster where the virtual machine will be provisioned.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Cluster",
            "Name": "Cluster",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorClusterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Host on which the virtual machine will be provisioned. Either a cluster or a host must be specified.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Host",
            "Name": "Host",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorHostType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Folder (optional) in which the virtual machine will be provisioned.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Folder",
            "Name": "Folder",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VmAndTemplateFolderType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Resource pool for the new virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Resource Pool",
            "Name": "ResourcePool",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Datastore allocated for this virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datastore",
            "Name": "Datastore",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatastoreType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Path of the template or virtual machine used to provision the virtual machine, template or virtual machine should be available locally in the hypervisor manager. When template or virtual machine is directly under a Datacenter  the template path or virtual machine path should be /<<DATACENTER>>/vm/<<TEMPLATE-NAME-or-VM-NAME>>\n\nWhen template or virtual machine is in a Datacenter and a Folder,  the template or virtual machine path should be /<<DATACENTER>>/vm/<<FOLDER>>/<<TEMPLATE-NAME-or-VM-Name>>\nFor example: Template 'Template1' in Datacenter 'DC1' should be /DC1/vm/Template1\nTemplate 'Template1' in Datacenter 'DC1' under a Folder 'Folder1', should be /DC1/vm/Folder1/Template1.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Template or Virtual Machine",
            "Name": "Template",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [
                {
                  "DisplayAttributes": [
                    "Name",
                    "InventoryPath",
                    "IsTemplate",
                    "PowerState"
                  ],
                  "ObjectType": "workflow.MoReferenceProperty",
                  "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseVirtualMachine)&$orderby=Name",
                  "SelectorProperty": {
                    "Method": "GET",
                    "ObjectType": "workflow.SelectorProperty"
                  },
                  "ValueAttribute": "InventoryPath"
                }
              ],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "Name",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Number of CPUs (optional) to allocate for the new virtual machine, if not provided will be taken from the template or virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "CPUs",
            "Name": "CPUs",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "Max": 1000,
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "integer"
            }
          },
          {
            "ArrayItemType": {
              "ObjectType": "workflow.PrimitiveArrayItem",
              "Properties": {
                "Constraints": {
                  "EnumList": [],
                  "ObjectType": "workflow.Constraints"
                },
                "InventorySelector": [],
                "ObjectType": "workflow.PrimitiveDataProperty",
                "Type": "json"
              }
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "GPU configurations to be applied on virtual machine",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "GPU configurations",
            "Name": "GpuConfigs",
            "ObjectType": "workflow.ArrayDataType"
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Memory (optional) allocation for the new virtual machine, in multiples of 4MB, if not provided will be taken from the template or virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Memory",
            "Name": "Memory",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "Max": 100000,
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "integer"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Annotation (optional) for the virtual machine, if not given, the virtual machine will have <no value> as annotation.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Annotation",
            "Name": "Annotation",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "If checked, virtual machine will be powered up after creation.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Power On",
            "Name": "PowerOn",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Network to be mapped to the Virtual Machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Network",
            "Name": "Network",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "Network",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "OVA environment customization spec as JSON.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "OVA Environment Spec",
            "Name": "OVAEnvSpec",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "json"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Configuration parameters specified as JSON.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Configuration Parameters",
            "Name": "ExtraConfig",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "json"
            }
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Datacenter where virtual machine was created.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datacenter",
            "Name": "Datacenter",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatacenterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Host on which virtual machine runs.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Host",
            "Name": "Host",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorHostType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Cluster on which virtual machine runs.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Cluster",
            "Name": "Cluster",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorClusterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "Name",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name of the Template or Virtual Machine",
            "Name": "Template",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Folder Name for the new virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Folder",
            "Name": "Folder",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VmAndTemplateFolderType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "TaskId",
            "Name": "TaskId",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Platform type of the Virtualization device",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtualization Platform Type",
            "Name": "VirtualizationPlatformType",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualizationPlatformType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          }
        ],
        "RetryCount": 256,
        "RetryDelay": 30,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Beta",
        "Timeout": 100,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [
        {
          "CatalogMoid": "shared",
          "Description": "Remove provisioned virtual machine.",
          "InputParameters": {
            "HypervisorManager": "${task.input.Vcenter}",
            "VirtualizationPlatformType": "${task.output.VirtualizationPlatformType}"
          },
          "Name": "RemoveVirtualMachine",
          "ObjectType": "workflow.RollbackTask",
          "Version": 3
        }
      ],
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "category",
          "Value": "Virtualization"
        },
        {
          "Key": "platformType.VmwareVcenter",
          "Value": "true"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "Time zones supported by a Linux virtual machine.",
      "Label": "Linux TimeZone",
      "Name": "LinuxTimeZoneType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Time zones supported by a Linux virtual machine.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Linux TimeZone",
          "Name": "LinuxTimeZone",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [
                {
                  "Label": "US/Pacific",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Pacific"
                },
                {
                  "Label": "US/Eastern",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Eastern"
                },
                {
                  "Label": "US/Central",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Central"
                },
                {
                  "Label": "US/Mountain",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Mountain"
                },
                {
                  "Label": "US/Alaska",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Alaska"
                },
                {
                  "Label": "US/Aleutian",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Aleutian"
                },
                {
                  "Label": "US/Arizona",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Arizona"
                },
                {
                  "Label": "US/East-Indiana",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/East-Indiana"
                },
                {
                  "Label": "US/Hawaii",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Hawaii"
                },
                {
                  "Label": "US/Indiana-Starke",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Indiana-Starke"
                },
                {
                  "Label": "US/Michigan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Michigan"
                },
                {
                  "Label": "US/Samoa",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "US/Samoa"
                },
                {
                  "Label": "Africa/Bangui",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Bangui"
                },
                {
                  "Label": "Africa/Abidjan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Abidjan"
                },
                {
                  "Label": "Africa/Accra",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Accra"
                },
                {
                  "Label": "Africa/Addis_Ababa",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Addis_Ababa"
                },
                {
                  "Label": "Africa/Algiers",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Algiers"
                },
                {
                  "Label": "Africa/Asmara",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Asmara"
                },
                {
                  "Label": "Africa/Bamako",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Bamako"
                },
                {
                  "Label": "Africa/Banjul",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Banjul"
                },
                {
                  "Label": "Africa/Bissau",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Bissau"
                },
                {
                  "Label": "Africa/Blantyre",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Blantyre"
                },
                {
                  "Label": "Africa/Brazzaville",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Brazzaville"
                },
                {
                  "Label": "Africa/Bujumbura",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Bujumbura"
                },
                {
                  "Label": "Africa/Cairo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Cairo"
                },
                {
                  "Label": "Africa/Casablanca",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Casablanca"
                },
                {
                  "Label": "Africa/Ceuta",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Ceuta"
                },
                {
                  "Label": "Africa/Conakry",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Conakry"
                },
                {
                  "Label": "Africa/Dakar",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Dakar"
                },
                {
                  "Label": "Africa/Dar_es_Salaam",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Dar_es_Salaam"
                },
                {
                  "Label": "Africa/Djibouti",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Djibouti"
                },
                {
                  "Label": "Africa/Douala",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Douala"
                },
                {
                  "Label": "Africa/El_Aaiun",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/El_Aaiun"
                },
                {
                  "Label": "Africa/Freetown",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Freetown"
                },
                {
                  "Label": "Africa/Gaborone",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Gaborone"
                },
                {
                  "Label": "Africa/Harare",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Harare"
                },
                {
                  "Label": "Africa/Johannesburg",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Johannesburg"
                },
                {
                  "Label": "Africa/Kampala",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Kampala"
                },
                {
                  "Label": "Africa/Khartoum",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Khartoum"
                },
                {
                  "Label": "Africa/Kigali",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Kigali"
                },
                {
                  "Label": "Africa/Kinshasa",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Kinshasa"
                },
                {
                  "Label": "Africa/Lagos",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Lagos"
                },
                {
                  "Label": "Africa/Libreville",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Libreville"
                },
                {
                  "Label": "Africa/Lome",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Lome"
                },
                {
                  "Label": "Africa/Luanda",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Luanda"
                },
                {
                  "Label": "Africa/Lubumbashi",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Lubumbashi"
                },
                {
                  "Label": "Africa/Lusaka",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Lusaka"
                },
                {
                  "Label": "Africa/Malabo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Malabo"
                },
                {
                  "Label": "Africa/Maputo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Maputo"
                },
                {
                  "Label": "Africa/Maseru",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Maseru"
                },
                {
                  "Label": "Africa/Mbabane",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Mbabane"
                },
                {
                  "Label": "Africa/Mogadishu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Mogadishu"
                },
                {
                  "Label": "Africa/Monrovia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Monrovia"
                },
                {
                  "Label": "Africa/Nairobi",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Nairobi"
                },
                {
                  "Label": "Africa/Ndjamena",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Ndjamena"
                },
                {
                  "Label": "Africa/Niamey",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Niamey"
                },
                {
                  "Label": "Africa/Nouakchott",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Nouakchott"
                },
                {
                  "Label": "Africa/Ouagadougou",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Ouagadougou"
                },
                {
                  "Label": "Africa/Porto-Novo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Porto-Novo"
                },
                {
                  "Label": "Africa/Sao_Tome",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Sao_Tome"
                },
                {
                  "Label": "Africa/Timbuktu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Timbuktu"
                },
                {
                  "Label": "Africa/Tripoli",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Tripoli"
                },
                {
                  "Label": "Africa/Tunis",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Tunis"
                },
                {
                  "Label": "Africa/Windhoek",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Africa/Windhoek"
                },
                {
                  "Label": "America/Adak",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Adak"
                },
                {
                  "Label": "America/Anchorage",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Anchorage"
                },
                {
                  "Label": "America/Anguilla",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Anguilla"
                },
                {
                  "Label": "America/Antigua",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Antigua"
                },
                {
                  "Label": "America/Araguaina",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Araguaina"
                },
                {
                  "Label": "America/Argentina",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Argentina"
                },
                {
                  "Label": "America/Aruba",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Aruba"
                },
                {
                  "Label": "America/Asuncion",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Asuncion"
                },
                {
                  "Label": "America/Atikokan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Atikokan"
                },
                {
                  "Label": "America/Atka",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Atka"
                },
                {
                  "Label": "America/Bahia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Bahia"
                },
                {
                  "Label": "America/Barbados",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Barbados"
                },
                {
                  "Label": "America/Belem",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Belem"
                },
                {
                  "Label": "America/Belize",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Belize"
                },
                {
                  "Label": "America/Blanc-Sablon",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Blanc-Sablon"
                },
                {
                  "Label": "America/Boa_Vista",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Boa_Vista"
                },
                {
                  "Label": "America/Bogota",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Bogota"
                },
                {
                  "Label": "America/Boise",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Boise"
                },
                {
                  "Label": "America/Buenos_Aires",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Buenos_Aires"
                },
                {
                  "Label": "America/Cambridge_Bay",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Cambridge_Bay"
                },
                {
                  "Label": "America/Campo_Grande",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Campo_Grande"
                },
                {
                  "Label": "America/Cancun",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Cancun"
                },
                {
                  "Label": "America/Caracas",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Caracas"
                },
                {
                  "Label": "America/Catamarca",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Catamarca"
                },
                {
                  "Label": "America/Cayenne",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Cayenne"
                },
                {
                  "Label": "America/Cayman",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Cayman"
                },
                {
                  "Label": "America/Chicago",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Chicago"
                },
                {
                  "Label": "America/Chihuahua",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Chihuahua"
                },
                {
                  "Label": "America/Coral_Harbour",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Coral_Harbour"
                },
                {
                  "Label": "America/Cordoba",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Cordoba"
                },
                {
                  "Label": "America/Costa_Rica",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Costa_Rica"
                },
                {
                  "Label": "America/Cuiaba",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Cuiaba"
                },
                {
                  "Label": "America/Curacao",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Curacao"
                },
                {
                  "Label": "America/Danmarkshavn",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Danmarkshavn"
                },
                {
                  "Label": "America/Dawson",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Dawson"
                },
                {
                  "Label": "America/Dawson_Creek",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Dawson_Creek"
                },
                {
                  "Label": "America/Denver",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Denver"
                },
                {
                  "Label": "America/Detroit",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Detroit"
                },
                {
                  "Label": "America/Dominica",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Dominica"
                },
                {
                  "Label": "America/Edmonton",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Edmonton"
                },
                {
                  "Label": "America/Eirunepe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Eirunepe"
                },
                {
                  "Label": "America/El_Salvador",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/El_Salvador"
                },
                {
                  "Label": "America/Ensenada",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Ensenada"
                },
                {
                  "Label": "America/Fortaleza",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Fortaleza"
                },
                {
                  "Label": "America/Fort_Wayne",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Fort_Wayne"
                },
                {
                  "Label": "America/Glace_Bay",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Glace_Bay"
                },
                {
                  "Label": "America/Godthab",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Godthab"
                },
                {
                  "Label": "America/Goose_Bay",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Goose_Bay"
                },
                {
                  "Label": "America/Grand_Turk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Grand_Turk"
                },
                {
                  "Label": "America/Grenada",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Grenada"
                },
                {
                  "Label": "America/Guadeloupe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Guadeloupe"
                },
                {
                  "Label": "America/Guatemala",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Guatemala"
                },
                {
                  "Label": "America/Guayaquil",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Guayaquil"
                },
                {
                  "Label": "America/Guyana",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Guyana"
                },
                {
                  "Label": "America/Halifax",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Halifax"
                },
                {
                  "Label": "America/Havana",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Havana"
                },
                {
                  "Label": "America/Hermosillo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Hermosillo"
                },
                {
                  "Label": "America/Indiana",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Indiana"
                },
                {
                  "Label": "America/Indianapolis",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Indianapolis"
                },
                {
                  "Label": "America/Inuvik",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Inuvik"
                },
                {
                  "Label": "America/Iqaluit",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Iqaluit"
                },
                {
                  "Label": "America/Jamaica",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Jamaica"
                },
                {
                  "Label": "America/Jujuy",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Jujuy"
                },
                {
                  "Label": "America/Juneau",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Juneau"
                },
                {
                  "Label": "America/Kentucky",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Kentucky"
                },
                {
                  "Label": "America/Knox_IN",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Knox_IN"
                },
                {
                  "Label": "America/La_Paz",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/La_Paz"
                },
                {
                  "Label": "America/Lima",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Lima"
                },
                {
                  "Label": "America/Los_Angeles",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Los_Angeles"
                },
                {
                  "Label": "America/Louisville",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Louisville"
                },
                {
                  "Label": "America/Maceio",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Maceio"
                },
                {
                  "Label": "America/Managua",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Managua"
                },
                {
                  "Label": "America/Manaus",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Manaus"
                },
                {
                  "Label": "America/Marigot",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Marigot"
                },
                {
                  "Label": "America/Martinique",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Martinique"
                },
                {
                  "Label": "America/Mazatlan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Mazatlan"
                },
                {
                  "Label": "America/Mendoza",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Mendoza"
                },
                {
                  "Label": "America/Menominee",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Menominee"
                },
                {
                  "Label": "America/Merida",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Merida"
                },
                {
                  "Label": "America/Mexico_City",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Mexico_City"
                },
                {
                  "Label": "America/Miquelon",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Miquelon"
                },
                {
                  "Label": "America/Moncton",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Moncton"
                },
                {
                  "Label": "America/Monterrey",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Monterrey"
                },
                {
                  "Label": "America/Montevideo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Montevideo"
                },
                {
                  "Label": "America/Montreal",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Montreal"
                },
                {
                  "Label": "America/Montserrat",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Montserrat"
                },
                {
                  "Label": "America/Nassau",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Nassau"
                },
                {
                  "Label": "America/New_York",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/New_York"
                },
                {
                  "Label": "America/Nipigon",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Nipigon"
                },
                {
                  "Label": "America/Nome",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Nome"
                },
                {
                  "Label": "America/Noronha",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Noronha"
                },
                {
                  "Label": "America/North_Dakota",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/North_Dakota"
                },
                {
                  "Label": "America/Panama",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Panama"
                },
                {
                  "Label": "America/Pangnirtung",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Pangnirtung"
                },
                {
                  "Label": "America/Paramaribo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Paramaribo"
                },
                {
                  "Label": "America/Phoenix",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Phoenix"
                },
                {
                  "Label": "America/Port-au-Prince",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Port-au-Prince"
                },
                {
                  "Label": "America/Porto_Acre",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Porto_Acre"
                },
                {
                  "Label": "America/Port_of_Spain",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Port_of_Spain"
                },
                {
                  "Label": "America/Porto_Velho",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Porto_Velho"
                },
                {
                  "Label": "America/Puerto_Rico",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Puerto_Rico"
                },
                {
                  "Label": "America/Rainy_River",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Rainy_River"
                },
                {
                  "Label": "America/Rankin_Inlet",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Rankin_Inlet"
                },
                {
                  "Label": "America/Recife",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Recife"
                },
                {
                  "Label": "America/Regina",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Regina"
                },
                {
                  "Label": "America/Resolute",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Resolute"
                },
                {
                  "Label": "America/Rio_Branco",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Rio_Branco"
                },
                {
                  "Label": "America/Rosario",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Rosario"
                },
                {
                  "Label": "America/Santarem",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Santarem"
                },
                {
                  "Label": "America/Santiago",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Santiago"
                },
                {
                  "Label": "America/Santo_Domingo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Santo_Domingo"
                },
                {
                  "Label": "America/Sao_Paulo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Sao_Paulo"
                },
                {
                  "Label": "America/Scoresbysund",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Scoresbysund"
                },
                {
                  "Label": "America/Shiprock",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Shiprock"
                },
                {
                  "Label": "America/St_Barthelemy",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/St_Barthelemy"
                },
                {
                  "Label": "America/St_Johns",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/St_Johns"
                },
                {
                  "Label": "America/St_Kitts",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/St_Kitts"
                },
                {
                  "Label": "America/St_Lucia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/St_Lucia"
                },
                {
                  "Label": "America/St_Thomas",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/St_Thomas"
                },
                {
                  "Label": "America/St_Vincent",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/St_Vincent"
                },
                {
                  "Label": "America/Swift_Current",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Swift_Current"
                },
                {
                  "Label": "America/Tegucigalpa",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Tegucigalpa"
                },
                {
                  "Label": "America/Thule",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Thule"
                },
                {
                  "Label": "America/Thunder_Bay",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Thunder_Bay"
                },
                {
                  "Label": "America/Tijuana",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Tijuana"
                },
                {
                  "Label": "America/Toronto",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Toronto"
                },
                {
                  "Label": "America/Tortola",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Tortola"
                },
                {
                  "Label": "America/Vancouver",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Vancouver"
                },
                {
                  "Label": "America/Virgin",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Virgin"
                },
                {
                  "Label": "America/Whitehorse",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Whitehorse"
                },
                {
                  "Label": "America/Winnipeg",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Winnipeg"
                },
                {
                  "Label": "America/Yakutat",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Yakutat"
                },
                {
                  "Label": "America/Yellowknife",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "America/Yellowknife"
                },
                {
                  "Label": "Antarctica/Casey",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/Casey"
                },
                {
                  "Label": "Antarctica/Davis",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/Davis"
                },
                {
                  "Label": "Antarctica/DumontDUrville",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/DumontDUrville"
                },
                {
                  "Label": "Antarctica/Mawson",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/Mawson"
                },
                {
                  "Label": "Antarctica/McMurdo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/McMurdo"
                },
                {
                  "Label": "Antarctica/Palmer",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/Palmer"
                },
                {
                  "Label": "Antarctica/Rothera",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/Rothera"
                },
                {
                  "Label": "Antarctica/South_Pole",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/South_Pole"
                },
                {
                  "Label": "Antarctica/Syowa",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/Syowa"
                },
                {
                  "Label": "Antarctica/Vostok",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Antarctica/Vostok"
                },
                {
                  "Label": "Arctic/Longyearbyen",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Arctic/Longyearbyen"
                },
                {
                  "Label": "Asia/Aden",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Aden"
                },
                {
                  "Label": "Asia/Almaty",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Almaty"
                },
                {
                  "Label": "Asia/Amman",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Amman"
                },
                {
                  "Label": "Asia/Anadyr",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Anadyr"
                },
                {
                  "Label": "Asia/Aqtau",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Aqtau"
                },
                {
                  "Label": "Asia/Aqtobe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Aqtobe"
                },
                {
                  "Label": "Asia/Ashgabat",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Ashgabat"
                },
                {
                  "Label": "Asia/Ashkhabad",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Ashkhabad"
                },
                {
                  "Label": "Asia/Baghdad",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Baghdad"
                },
                {
                  "Label": "Asia/Bahrain",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Bahrain"
                },
                {
                  "Label": "Asia/Baku",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Baku"
                },
                {
                  "Label": "Asia/Bangkok",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Bangkok"
                },
                {
                  "Label": "Asia/Beirut",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Beirut"
                },
                {
                  "Label": "Asia/Bishkek",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Bishkek"
                },
                {
                  "Label": "Asia/Brunei",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Brunei"
                },
                {
                  "Label": "Asia/Calcutta",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Calcutta"
                },
                {
                  "Label": "Asia/Choibalsan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Choibalsan"
                },
                {
                  "Label": "Asia/Chongqing",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Chongqing"
                },
                {
                  "Label": "Asia/Chungking",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Chungking"
                },
                {
                  "Label": "Asia/Colombo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Colombo"
                },
                {
                  "Label": "Asia/Dacca",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Dacca"
                },
                {
                  "Label": "Asia/Damascus",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Damascus"
                },
                {
                  "Label": "Asia/Dhaka",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Dhaka"
                },
                {
                  "Label": "Asia/Dili",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Dili"
                },
                {
                  "Label": "Asia/Dubai",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Dubai"
                },
                {
                  "Label": "Asia/Dushanbe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Dushanbe"
                },
                {
                  "Label": "Asia/Gaza",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Gaza"
                },
                {
                  "Label": "Asia/Harbin",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Harbin"
                },
                {
                  "Label": "Asia/Ho_Chi_Minh",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Ho_Chi_Minh"
                },
                {
                  "Label": "Asia/Hong_Kong",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Hong_Kong"
                },
                {
                  "Label": "Asia/Hovd",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Hovd"
                },
                {
                  "Label": "Asia/Irkutsk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Irkutsk"
                },
                {
                  "Label": "Asia/Istanbul",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Istanbul"
                },
                {
                  "Label": "Asia/Jakarta",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Jakarta"
                },
                {
                  "Label": "Asia/Jayapura",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Jayapura"
                },
                {
                  "Label": "Asia/Jerusalem",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Jerusalem"
                },
                {
                  "Label": "Asia/Kabul",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kabul"
                },
                {
                  "Label": "Asia/Kamchatka",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kamchatka"
                },
                {
                  "Label": "Asia/Karachi",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Karachi"
                },
                {
                  "Label": "Asia/Kashgar",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kashgar"
                },
                {
                  "Label": "Asia/Kathmandu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kathmandu"
                },
                {
                  "Label": "Asia/Katmandu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Katmandu"
                },
                {
                  "Label": "Asia/Kolkata",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kolkata"
                },
                {
                  "Label": "Asia/Krasnoyarsk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Krasnoyarsk"
                },
                {
                  "Label": "Asia/Kuala_Lumpur",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kuala_Lumpur"
                },
                {
                  "Label": "Asia/Kuching",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kuching"
                },
                {
                  "Label": "Asia/Kuwait",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Kuwait"
                },
                {
                  "Label": "Asia/Macao",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Macao"
                },
                {
                  "Label": "Asia/Macau",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Macau"
                },
                {
                  "Label": "Asia/Magadan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Magadan"
                },
                {
                  "Label": "Asia/Makassar",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Makassar"
                },
                {
                  "Label": "Asia/Manila",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Manila"
                },
                {
                  "Label": "Asia/Muscat",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Muscat"
                },
                {
                  "Label": "Asia/Nicosia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Nicosia"
                },
                {
                  "Label": "Asia/Novosibirsk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Novosibirsk"
                },
                {
                  "Label": "Asia/Omsk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Omsk"
                },
                {
                  "Label": "Asia/Oral",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Oral"
                },
                {
                  "Label": "Asia/Phnom_Penh",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Phnom_Penh"
                },
                {
                  "Label": "Asia/Pontianak",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Pontianak"
                },
                {
                  "Label": "Asia/Pyongyang",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Pyongyang"
                },
                {
                  "Label": "Asia/Qatar",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Qatar"
                },
                {
                  "Label": "Asia/Qyzylorda",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Qyzylorda"
                },
                {
                  "Label": "Asia/Rangoon",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Rangoon"
                },
                {
                  "Label": "Asia/Riyadh",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Riyadh"
                },
                {
                  "Label": "Asia/Riyadh87",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Riyadh87"
                },
                {
                  "Label": "Asia/Riyadh88",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Riyadh88"
                },
                {
                  "Label": "Asia/Riyadh89",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Riyadh89"
                },
                {
                  "Label": "Asia/Saigon",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Saigon"
                },
                {
                  "Label": "Asia/Sakhalin",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Sakhalin"
                },
                {
                  "Label": "Asia/Samarkand",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Samarkand"
                },
                {
                  "Label": "Asia/Seoul",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Seoul"
                },
                {
                  "Label": "Asia/Shanghai",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Shanghai"
                },
                {
                  "Label": "Asia/Singapore",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Singapore"
                },
                {
                  "Label": "Asia/Taipei",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Taipei"
                },
                {
                  "Label": "Asia/Tashkent",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Tashkent"
                },
                {
                  "Label": "Asia/Tbilisi",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Tbilisi"
                },
                {
                  "Label": "Asia/Tehran",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Tehran"
                },
                {
                  "Label": "Asia/Tel_Aviv",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Tel_Aviv"
                },
                {
                  "Label": "Asia/Thimbu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Thimbu"
                },
                {
                  "Label": "Asia/Thimphu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Thimphu"
                },
                {
                  "Label": "Asia/Tokyo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Tokyo"
                },
                {
                  "Label": "Asia/Ujung_Pandang",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Ujung_Pandang"
                },
                {
                  "Label": "Asia/Ulaanbaatar",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Ulaanbaatar"
                },
                {
                  "Label": "Asia/Ulan_Bator",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Ulan_Bator"
                },
                {
                  "Label": "Asia/Urumqi",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Urumqi"
                },
                {
                  "Label": "Asia/Vientiane",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Vientiane"
                },
                {
                  "Label": "Asia/Vladivostok",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Vladivostok"
                },
                {
                  "Label": "Asia/Yakutsk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Yakutsk"
                },
                {
                  "Label": "Asia/Yekaterinburg",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Yekaterinburg"
                },
                {
                  "Label": "Asia/Yerevan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Asia/Yerevan"
                },
                {
                  "Label": "Atlantic/Azores",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Azores"
                },
                {
                  "Label": "Atlantic/Bermuda",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Bermuda"
                },
                {
                  "Label": "Atlantic/Canary",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Canary"
                },
                {
                  "Label": "Atlantic/Cape_Verde",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Cape_Verde"
                },
                {
                  "Label": "Atlantic/Faeroe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Faeroe"
                },
                {
                  "Label": "Atlantic/Faroe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Faroe"
                },
                {
                  "Label": "Atlantic/Jan_Mayen",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Jan_Mayen"
                },
                {
                  "Label": "Atlantic/Madeira",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Madeira"
                },
                {
                  "Label": "Atlantic/Reykjavik",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Reykjavik"
                },
                {
                  "Label": "Atlantic/South_Georgia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/South_Georgia"
                },
                {
                  "Label": "Atlantic/Stanley",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/Stanley"
                },
                {
                  "Label": "Atlantic/St_Helena",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Atlantic/St_Helena"
                },
                {
                  "Label": "Australia/ACT",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/ACT"
                },
                {
                  "Label": "Australia/Adelaide",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Adelaide"
                },
                {
                  "Label": "Australia/Brisbane",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Brisbane"
                },
                {
                  "Label": "Australia/Broken_Hill",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Broken_Hill"
                },
                {
                  "Label": "Australia/Canberra",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Canberra"
                },
                {
                  "Label": "Australia/Currie",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Currie"
                },
                {
                  "Label": "Australia/Darwin",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Darwin"
                },
                {
                  "Label": "Australia/Eucla",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Eucla"
                },
                {
                  "Label": "Australia/Hobart",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Hobart"
                },
                {
                  "Label": "Australia/LHI",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/LHI"
                },
                {
                  "Label": "Australia/Lindeman",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Lindeman"
                },
                {
                  "Label": "Australia/Lord_Howe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Lord_Howe"
                },
                {
                  "Label": "Australia/Melbourne",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Melbourne"
                },
                {
                  "Label": "Australia/North",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/North"
                },
                {
                  "Label": "Australia/NSW",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/NSW"
                },
                {
                  "Label": "Australia/Perth",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Perth"
                },
                {
                  "Label": "Australia/Queensland",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Queensland"
                },
                {
                  "Label": "Australia/South",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/South"
                },
                {
                  "Label": "Australia/Sydney",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Sydney"
                },
                {
                  "Label": "Australia/Tasmania",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Tasmania"
                },
                {
                  "Label": "Australia/Victoria",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Victoria"
                },
                {
                  "Label": "Australia/West",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/West"
                },
                {
                  "Label": "Australia/Yancowinna",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Australia/Yancowinna"
                },
                {
                  "Label": "Brazil/Acre",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Brazil/Acre"
                },
                {
                  "Label": "Brazil/DeNoronha",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Brazil/DeNoronha"
                },
                {
                  "Label": "Brazil/East",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Brazil/East"
                },
                {
                  "Label": "Brazil/West",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Brazil/West"
                },
                {
                  "Label": "Canada/Atlantic",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Atlantic"
                },
                {
                  "Label": "Canada/Central",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Central"
                },
                {
                  "Label": "Canada/Eastern",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Eastern"
                },
                {
                  "Label": "Canada/East-Saskatchewan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/East-Saskatchewan"
                },
                {
                  "Label": "Canada/Mountain",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Mountain"
                },
                {
                  "Label": "Canada/Newfoundland",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Newfoundland"
                },
                {
                  "Label": "Canada/Pacific",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Pacific"
                },
                {
                  "Label": "Canada/Saskatchewan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Saskatchewan"
                },
                {
                  "Label": "Canada/Yukon",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Canada/Yukon"
                },
                {
                  "Label": "Chile/Continental",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Chile/Continental"
                },
                {
                  "Label": "Chile/EasterIsland",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Chile/EasterIsland"
                },
                {
                  "Label": "Etc/GMT",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT"
                },
                {
                  "Label": "Etc/GMT0",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT0"
                },
                {
                  "Label": "Etc/GMT-0",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-0"
                },
                {
                  "Label": "Etc/GMT+0",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+0"
                },
                {
                  "Label": "Etc/GMT-1",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-1"
                },
                {
                  "Label": "Etc/GMT+1",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+1"
                },
                {
                  "Label": "Etc/GMT-10",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-10"
                },
                {
                  "Label": "Etc/GMT+10",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+10"
                },
                {
                  "Label": "Etc/GMT-11",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-11"
                },
                {
                  "Label": "Etc/GMT+11",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+11"
                },
                {
                  "Label": "Etc/GMT-12",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-12"
                },
                {
                  "Label": "Etc/GMT+12",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+12"
                },
                {
                  "Label": "Etc/GMT-13",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-13"
                },
                {
                  "Label": "Etc/GMT-14",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-14"
                },
                {
                  "Label": "Etc/GMT-2",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-2"
                },
                {
                  "Label": "Etc/GMT+2",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+2"
                },
                {
                  "Label": "Etc/GMT-3",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-3"
                },
                {
                  "Label": "Etc/GMT+3",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+3"
                },
                {
                  "Label": "Etc/GMT-4",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-4"
                },
                {
                  "Label": "Etc/GMT+4",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+4"
                },
                {
                  "Label": "Etc/GMT-5",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-5"
                },
                {
                  "Label": "Etc/GMT+5",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+5"
                },
                {
                  "Label": "Etc/GMT-6",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-6"
                },
                {
                  "Label": "Etc/GMT+6",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+6"
                },
                {
                  "Label": "Etc/GMT-7",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-7"
                },
                {
                  "Label": "Etc/GMT+7",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+7"
                },
                {
                  "Label": "Etc/GMT-8",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-8"
                },
                {
                  "Label": "Etc/GMT+8",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+8"
                },
                {
                  "Label": "Etc/GMT-9",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT-9"
                },
                {
                  "Label": "Etc/GMT+9",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/GMT+9"
                },
                {
                  "Label": "Etc/Greenwich",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/Greenwich"
                },
                {
                  "Label": "Etc/UCT",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/UCT"
                },
                {
                  "Label": "Etc/Universal",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/Universal"
                },
                {
                  "Label": "Etc/UTC",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/UTC"
                },
                {
                  "Label": "Etc/Zulu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Etc/Zulu"
                },
                {
                  "Label": "Europe/Amsterdam",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Amsterdam"
                },
                {
                  "Label": "Europe/Andorra",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Andorra"
                },
                {
                  "Label": "Europe/Athens",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Athens"
                },
                {
                  "Label": "Europe/Belfast",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Belfast"
                },
                {
                  "Label": "Europe/Belgrade",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Belgrade"
                },
                {
                  "Label": "Europe/Berlin",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Berlin"
                },
                {
                  "Label": "Europe/Bratislava",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Bratislava"
                },
                {
                  "Label": "Europe/Brussels",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Brussels"
                },
                {
                  "Label": "Europe/Bucharest",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Bucharest"
                },
                {
                  "Label": "Europe/Budapest",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Budapest"
                },
                {
                  "Label": "Europe/Chisinau",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Chisinau"
                },
                {
                  "Label": "Europe/Copenhagen",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Copenhagen"
                },
                {
                  "Label": "Europe/Dublin",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Dublin"
                },
                {
                  "Label": "Europe/Gibraltar",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Gibraltar"
                },
                {
                  "Label": "Europe/Guernsey",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Guernsey"
                },
                {
                  "Label": "Europe/Helsinki",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Helsinki"
                },
                {
                  "Label": "Europe/Isle_of_Man",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Isle_of_Man"
                },
                {
                  "Label": "Europe/Istanbul",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Istanbul"
                },
                {
                  "Label": "Europe/Jersey",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Jersey"
                },
                {
                  "Label": "Europe/Kaliningrad",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Kaliningrad"
                },
                {
                  "Label": "Europe/Kiev",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Kiev"
                },
                {
                  "Label": "Europe/Lisbon",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Lisbon"
                },
                {
                  "Label": "Europe/Ljubljana",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Ljubljana"
                },
                {
                  "Label": "Europe/London",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/London"
                },
                {
                  "Label": "Europe/Luxembourg",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Luxembourg"
                },
                {
                  "Label": "Europe/Madrid",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Madrid"
                },
                {
                  "Label": "Europe/Malta",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Malta"
                },
                {
                  "Label": "Europe/Mariehamn",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Mariehamn"
                },
                {
                  "Label": "Europe/Minsk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Minsk"
                },
                {
                  "Label": "Europe/Monaco",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Monaco"
                },
                {
                  "Label": "Europe/Moscow",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Moscow"
                },
                {
                  "Label": "Europe/Nicosia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "AEurope/Nicosia"
                },
                {
                  "Label": "Europe/Oslo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Oslo"
                },
                {
                  "Label": "Europe/Paris",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Paris"
                },
                {
                  "Label": "Europe/Podgorica",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Podgorica"
                },
                {
                  "Label": "Europe/Prague",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Prague"
                },
                {
                  "Label": "Europe/Riga",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Riga"
                },
                {
                  "Label": "Europe/Rome",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Rome"
                },
                {
                  "Label": "Europe/Samara",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Samara"
                },
                {
                  "Label": "Europe/San_Marino",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/San_Marino"
                },
                {
                  "Label": "Europe/Sarajevo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Sarajevo"
                },
                {
                  "Label": "Europe/Simferopol",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Simferopol"
                },
                {
                  "Label": "Europe/Skopje",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Skopje"
                },
                {
                  "Label": "Europe/Sofia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Sofia"
                },
                {
                  "Label": "Europe/Stockholm",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Stockholm"
                },
                {
                  "Label": "Europe/Tallinn",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Tallinn"
                },
                {
                  "Label": "Europe/Tirane",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Tirane"
                },
                {
                  "Label": "Europe/Tiraspol",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Tiraspol"
                },
                {
                  "Label": "Europe/Uzhgorod",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Uzhgorod"
                },
                {
                  "Label": "Europe/Vaduz",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Vaduz"
                },
                {
                  "Label": "Europe/Vatican",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Vatican"
                },
                {
                  "Label": "Europe/Vienna",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Vienna"
                },
                {
                  "Label": "Europe/Vilnius",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Vilnius"
                },
                {
                  "Label": "Europe/Volgograd",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Volgograd"
                },
                {
                  "Label": "Europe/Warsaw",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Warsaw"
                },
                {
                  "Label": "Europe/Zagreb",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Zagreb"
                },
                {
                  "Label": "Europe/Zaporozhye",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Zaporozhye"
                },
                {
                  "Label": "Europe/Zurich",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Europe/Zurich"
                },
                {
                  "Label": "Indian/Antananarivo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Antananarivo"
                },
                {
                  "Label": "Indian/Chagos",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Chagos"
                },
                {
                  "Label": "Indian/Christmas",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Christmas"
                },
                {
                  "Label": "Indian/Cocos",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Cocos"
                },
                {
                  "Label": "Indian/Comoro",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Comoro"
                },
                {
                  "Label": "Indian/Kerguelen",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Kerguelen"
                },
                {
                  "Label": "Indian/Mahe",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Mahe"
                },
                {
                  "Label": "Indian/Maldives",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Maldives"
                },
                {
                  "Label": "Indian/Mauritius",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Mauritius"
                },
                {
                  "Label": "Indian/Mayotte",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Mayotte"
                },
                {
                  "Label": "Indian/Reunion",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Indian/Reunion"
                },
                {
                  "Label": "Mexico/BajaNorte",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Mexico/BajaNorte"
                },
                {
                  "Label": "Mexico/BajaSur",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Mexico/BajaSur"
                },
                {
                  "Label": "Mexico/General",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Mexico/General"
                },
                {
                  "Label": "Mideast/Riyadh87",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Mideast/Riyadh87"
                },
                {
                  "Label": "Mideast/Riyadh88",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Mideast/Riyadh88"
                },
                {
                  "Label": "Mideast/Riyadh89",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Mideast/Riyadh89"
                },
                {
                  "Label": "Pacific/Apia",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Apia"
                },
                {
                  "Label": "Pacific/Auckland",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Auckland"
                },
                {
                  "Label": "Pacific/Chatham",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Chatham"
                },
                {
                  "Label": "Pacific/Easter",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Easter"
                },
                {
                  "Label": "Pacific/Efate",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Efate"
                },
                {
                  "Label": "Pacific/Enderbury",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Enderbury"
                },
                {
                  "Label": "Pacific/Fakaofo",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Fakaofo"
                },
                {
                  "Label": "Pacific/Fiji",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Fiji"
                },
                {
                  "Label": "Pacific/Funafuti",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Funafuti"
                },
                {
                  "Label": "Pacific/Galapagos",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Galapagos"
                },
                {
                  "Label": "Pacific/Gambier",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Gambier"
                },
                {
                  "Label": "Pacific/Guadalcanal",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Guadalcanal"
                },
                {
                  "Label": "Pacific/Guam",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Guam"
                },
                {
                  "Label": "Pacific/Honolulu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Honolulu"
                },
                {
                  "Label": "Pacific/Johnston",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Johnston"
                },
                {
                  "Label": "Pacific/Kiritimati",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Kiritimati"
                },
                {
                  "Label": "Pacific/Kosrae",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Kosrae"
                },
                {
                  "Label": "Pacific/Kwajalein",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Kwajalein"
                },
                {
                  "Label": "Pacific/Majuro",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Majuro"
                },
                {
                  "Label": "Pacific/Marquesas",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Marquesas"
                },
                {
                  "Label": "Pacific/Midway",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Midway"
                },
                {
                  "Label": "Pacific/Nauru",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Nauru"
                },
                {
                  "Label": "Pacific/Niue",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Niue"
                },
                {
                  "Label": "Pacific/Norfolk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Norfolk"
                },
                {
                  "Label": "Pacific/Noumea",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Noumea"
                },
                {
                  "Label": "Pacific/Pago_Pago",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Pago_Pago"
                },
                {
                  "Label": "Pacific/Palau",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Palau"
                },
                {
                  "Label": "Pacific/Pitcairn",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Pitcairn"
                },
                {
                  "Label": "Pacific/Ponape",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Ponape"
                },
                {
                  "Label": "Pacific/Port_Moresby",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Port_Moresby"
                },
                {
                  "Label": "Pacific/Rarotonga",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Rarotonga"
                },
                {
                  "Label": "Pacific/Saipan",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Saipan"
                },
                {
                  "Label": "Pacific/Samoa",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Samoa"
                },
                {
                  "Label": "Pacific/Tahiti",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Tahiti"
                },
                {
                  "Label": "Pacific/Tarawa",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Tarawa"
                },
                {
                  "Label": "Pacific/Tongatapu",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Tongatapu"
                },
                {
                  "Label": "Pacific/Truk",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Truk"
                },
                {
                  "Label": "Pacific/Wake",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Wake"
                },
                {
                  "Label": "Pacific/Wallis",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Wallis"
                },
                {
                  "Label": "Pacific/Yap",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "Pacific/Yap"
                }
              ],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "enum"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "CompositeType": true,
      "Description": "Type definition for guest customization of linux virtual machine.",
      "Label": "Linux Virtual Machine Guest Customization Type",
      "Name": "LinuxVirtualMachineGuestCustomizationType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Datacenter associated with the virtual machine.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Datacenter",
          "Name": "Datacenter",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "HypervisorDatacenterType",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Folder in which the virtual machine resides.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Folder",
          "Name": "Folder",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "VmAndTemplateFolderType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Name of the virtual machine to be customized.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Virtual Machine",
          "Name": "VmName",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "VirtualMachineType",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Hostname to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Hostname",
          "Name": "Name",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": "^[a-zA-Z0-9_-]*$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Time Zone to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Time Zone",
          "Name": "TimeZone",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "LinuxTimeZoneType",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Domain associated with the virtual machine.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Domain",
          "Name": "Domain",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          }
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Network Interfaces",
          "Name": "NetworkInterfaces1",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "NetworkInterfacesType",
            "ObjectType": "workflow.CustomDataProperty"
          }
        },
        {
          "ArrayItemType": {
            "ObjectType": "workflow.PrimitiveArrayItem",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "List of DNS servers to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "DNS Servers",
          "Max": 3,
          "Name": "DnsServers",
          "ObjectType": "workflow.ArrayDataType"
        },
        {
          "ArrayItemType": {
            "ObjectType": "workflow.PrimitiveArrayItem",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "List of DNS suffixes to be configured for the virtual machine’s guest operating system.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "DNS Suffixes",
          "Max": 2,
          "Name": "DnsSuffixes",
          "ObjectType": "workflow.ArrayDataType"
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Guest Customization for a virtual machine. The virtual machine will be restarted to apply the customization. The inputs datacenter, virtual machine name, Hostname and timezone are mandatory. On successful execution, the customized properties of virtual machine will be generated as outputs.",
      "Label": "Invoke Guest Customization for Linux Virtual Machine",
      "Name": "InvokeGuestCustomizationForLinuxVirtualMachine",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "Vcenter",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "DeviceHostname",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                }
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Datacenter associated with the virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datacenter",
            "Name": "Datacenter",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatacenterType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Folder in which the virtual machine resides.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Folder",
            "Name": "Folder",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VmAndTemplateFolderType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine to be customized.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "VmName",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Hostname to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hostname",
            "Name": "Name",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints",
                "Regex": "^[a-zA-Z0-9_-]*$"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Time Zone to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Time Zone",
            "Name": "TimeZone",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "LinuxTimeZoneType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Domain associated with the virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Domain",
            "Name": "Domain",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Network Interfaces",
            "Name": "NetworkInterfaces1",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "NetworkInterfacesType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "ArrayItemType": {
              "ObjectType": "workflow.PrimitiveArrayItem",
              "Properties": {
                "Constraints": {
                  "EnumList": [],
                  "ObjectType": "workflow.Constraints"
                },
                "InventorySelector": [],
                "ObjectType": "workflow.PrimitiveDataProperty",
                "Type": "string"
              }
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "List of DNS servers to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "DNS Servers",
            "Max": 3,
            "Name": "DnsServers",
            "ObjectType": "workflow.ArrayDataType"
          },
          {
            "ArrayItemType": {
              "ObjectType": "workflow.PrimitiveArrayItem",
              "Properties": {
                "Constraints": {
                  "EnumList": [],
                  "ObjectType": "workflow.Constraints"
                },
                "InventorySelector": [],
                "ObjectType": "workflow.PrimitiveDataProperty",
                "Type": "string"
              }
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "List of DNS suffixes to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "DNS Suffixes",
            "Max": 2,
            "Name": "DnsSuffixes",
            "ObjectType": "workflow.ArrayDataType"
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Linux Guest Configurations",
            "Name": "vmConfig",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "LinuxVirtualMachineGuestCustomizationType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          }
        ],
        "RetryCount": 1,
        "RetryDelay": 100,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 300,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "category",
          "Value": "Virtualization"
        },
        {
          "Key": "platformType.VmwareVcenter",
          "Value": "true"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Executes Ansible Playbook against the given endpoint. This task can be executed on targets added as Ansible Endpoint in Intersight.\n",
      "Label": "Invoke Ansible Playbook",
      "Name": "InvokeAnsiblePlaybook",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The Ansible playbooks are executed on this Target. Ansible playbooks can be run only on targets that are added as Ansible Endpoint target in Intersight and are in the connected state. The Ansible Control node must have all the prerequisites required to run the Ansible playbooks.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Ansible Controller",
            "Name": "AnsibleController",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=TargetType eq AnsibleEndpoint and Status eq Connected",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The path of the Ansible playbook that resides on the Ansible Endpoint target.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Playbook Path",
            "Name": "PlaybookPath",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The path of the host inventory file that resides on the Ansible Endpoint target or the comma separated list of hosts on which the Ansible playbook is to be run. Make sure to suffix a comma when the list of hosts is provided as input, even if the list has only one value. e.g.: root@127.0.0.1,\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Host Inventory",
            "Name": "HostInventory",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The command timeout in seconds for the execution of the Ansible playbook against the given endpoint. The default command timeout is 600 seconds. Range is from 10 to 7200 seconds.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Command Timeout",
            "Name": "Timeout",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "Max": 7200,
                "Min": 10,
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "integer"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The command line arguments for running the Ansible playbook against the given endpoint.\nEscape character backslash(\\) needs to be used when the command line arguments contain double quotes(\") in them.\n\nThe following command line options are not supported by the Ansible playbook task.\n1. -vvv\n2. -vvvv\n3. -k, -K\n4. -c\n5. --connection\n6. --sftp-extra-args\n7. --scp-extra-args\n8. --ask-vault-password\n9. --step\n\nFor more information on the Ansible playbook documentation, see\nhttps://docs.ansible.com/ansible/latest/cli/ansible-playbook.html for the list of other supported command line options.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Command Line Arguments",
            "Name": "CommandLineArguments",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The exit code after running the Ansible playbook against the given endpoint.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Exit Code",
            "Name": "ExitCode",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The summary after running the Ansible playbook against the given endpoint. Data type is JSON.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Execution Summary",
            "Name": "ExecutionSummary",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "json"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The Ansible log path after running the Ansible playbook against the given endpoint.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Execution Log Path",
            "Name": "ExecutionLogPath",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          }
        ],
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 7200,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SecurePropAccess": true,
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "category",
          "Value": "Executors"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "CompositeType": true,
      "Description": "Expect Prompt models a single expect and answer prompt of the interactive command.\n",
      "Label": "Expect Prompt",
      "Name": "ExpectPrompt",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The regular expression of the expect prompt of the Interactive command. You must provide the complete regular expression of the expect string and the expression must end with special character '$' to match the end of the Expect string.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Expect",
          "Name": "Expect",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": ".*\\$$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The answer string to the Expect prompt.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Send",
          "Name": "Send",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "CompositeType": true,
      "Description": "SSH command to execute on the remote server. SSH task executor supports executing non-interactive and prompts based interactive commands.\n",
      "Label": "SSH Command Type",
      "Name": "SshCommandType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [
        {
          "Condition": "eq",
          "ControlParameter": "CommandType",
          "EnableParameters": [
            "ExpectPrompts",
            "ShellPrompt"
          ],
          "Name": "enablePrompt",
          "ObjectType": "workflow.ParameterSet",
          "Value": "InteractiveCmd"
        }
      ],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The SSH commands that are to be run on the remote server. Multiple commands can be configured to be run on the given target by chaining the commands with special characters - '&&'  ';' '|' etc. Note that command chaining is allowed only when the command type is Non-Interactive.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Command",
          "Name": "Command",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The SSH command type to be run on the remote server. The SSH task supports running Non-Interactive and expect prompts based Interactive commands.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "Radio"
          },
          "Label": "Command Type",
          "Name": "CommandType",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [
                {
                  "Label": "Non-Interactive",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "NonInteractiveCmd"
                },
                {
                  "Label": "Interactive",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "InteractiveCmd"
                }
              ],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "enum"
          },
          "Required": true
        },
        {
          "ArrayItemType": {
            "ObjectType": "workflow.CustomArrayItem",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "ExpectPrompt",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Expect prompts required as part of command execution. It is a collection of ExpectPrompt type.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Expect Prompts",
          "Max": 10,
          "Min": 1,
          "Name": "ExpectPrompts",
          "ObjectType": "workflow.ArrayDataType",
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The regular expression of the Shell Prompt of the remote server or target. You must provide the complete regular expression of the Shell Prompt and it must end with special character '$' to match the end of the Shell Prompt string.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Shell Prompt",
          "Name": "ShellPrompt",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints",
              "Regex": ".*\\$$"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "Description": "The types of values that can be extracted from API responses in IO Generic API tasks.",
      "Label": "Response Parameter Type",
      "Name": "ResponseParameterTypeEnum",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The types of values that can be extracted from API responses in IO Generic API tasks. The JSON type can be used to extract any type of value from response as a parameter.",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Parameter Type",
          "Name": "ParameterType",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [
                {
                  "Label": "String",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "string"
                },
                {
                  "Label": "Integer",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "integer"
                },
                {
                  "Label": "Float",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "float"
                },
                {
                  "Label": "Boolean",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "boolean"
                },
                {
                  "Label": "JSON",
                  "ObjectType": "workflow.EnumEntry",
                  "Value": "json"
                }
              ],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "enum"
          },
          "Required": true
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "CompositeType": true,
      "Description": "This data type takes information about a parameter that needs to be extracted from an API response in Generic API tasks.",
      "Label": "Response Parameter",
      "Name": "TextResponseParameter",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The regular expression of the line in the command response where the interested capture value resides. The format to specify the capture value in this input is '$&lt;Name of the parameter&gt;'. For example, if we need to capture 'intersight' in the sample response 'intersight@cisco.com', the regular expression must be $&lt;Name&gt;\\@cisco\\.com where 'Name' is the name given to the captured parameter.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Regular Expression",
          "Name": "RegexLine",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Name of the output under which the captured value is saved. This is the same name that needs to be given in the capture group in the Regular Expression field. For example, if the value of the Regular Expression field is $&lt;ParameterName&gt;\\@cisco\\.com, then the Name field must be given the value - ParameterName.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Name",
          "Name": "Name",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The response parameter type - String, Integer, Float, Boolean. The default value is String.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Type",
          "Name": "Type",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "ResponseParameterTypeEnum",
            "ObjectType": "workflow.CustomDataProperty"
          }
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.CustomDataTypeDefinition",
      "CompositeType": true,
      "Description": "Response parser framework supports extraction of required values from API/device responses. These responses may be of various content types such as XML, JSON, etc. The values of importance are modeled as parameters in the response parser framework.\nThe parameters can be of a scalar value type or a collection of values. A group of related parameters can be modeled as a single complex type parameter. These complex types will be very useful to extract a set of repeating group of related parameters.\nA response parser specification defines the set of parameters that need to be extracted from the content. The response parser specification allows complex type definitions to be defined for any complex parameters.",
      "Label": "Response Parser",
      "Name": "TextResponseParserType",
      "ObjectType": "workflow.CustomDataTypeDefinition",
      "ParameterSet": [],
      "Properties": {
        "ObjectType": "workflow.CustomDataTypeProperties"
      },
      "SharedScope": "shared",
      "TypeDefinition": [
        {
          "ArrayItemType": {
            "ObjectType": "workflow.CustomArrayItem",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "TextResponseParameter",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "The collection of parameters that need to be extracted from the API response.\n",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Parameters",
          "Max": 10,
          "Min": 1,
          "Name": "Parameters",
          "ObjectType": "workflow.ArrayDataType"
        }
      ]
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/CustomDataTypeDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Executes SSH commands against the given endpoint. This task can be executed on targets added as SSH Endpoint or Ansible Endpoint in Intersight.\n",
      "Label": "Invoke SSH Commands",
      "Name": "InvokeSshCommands",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The external target on which the SSH commands are run. The SSH commands can be run only on targets added as SSH Endpoint or Ansible Endpoint target in Intersight and are in the connected state.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "External Target",
            "Name": "Target",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "Name",
                  "TargetType"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/Targets?$filter=((TargetType eq SSHEndpoint or TargetType eq AnsibleEndpoint) and Status eq Connected)",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.Target"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The SSH commands that are run on the remote server along with the details of the SSH command.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "SSH Command",
            "Name": "SshCommand",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "SshCommandType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The command timeout in seconds for the execution of the command against the given endpoint. The default command timeout is 600 seconds. Range is from 10 to 7200 seconds.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Command Timeout",
            "Name": "Timeout",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "Max": 7200,
                "Min": 10,
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "integer"
            }
          },
          {
            "ArrayItemType": {
              "ObjectType": "workflow.PrimitiveArrayItem",
              "Properties": {
                "Constraints": {
                  "EnumList": [],
                  "ObjectType": "workflow.Constraints"
                },
                "InventorySelector": [],
                "ObjectType": "workflow.PrimitiveDataProperty",
                "Type": "integer"
              }
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The list of expected command exit codes of the execution of the command against the given endpoint. Default exit code of 0 is used to determine the status of command execution when this input is not provided.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Expected Exit Codes",
            "Max": 10,
            "Name": "ExpectedExitCodes",
            "ObjectType": "workflow.ArrayDataType"
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Set this value to True if the entire command response needs to be displayed as part of the task output. Default value is false.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Show Command Output",
            "Name": "ShowCommandOutput",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The structure of the response parser which provides the list of values that need to be extracted from the response.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Response Parser",
            "Name": "ResponseParser",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "TextResponseParserType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The exit code after the execution of the command against the given endpoint.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Exit Code",
            "Name": "ExitCode",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The complete response after the execution of the command against the given endpoint.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Command Output",
            "Name": "CommandOutput",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Captures the error encountered while executing the command.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Command Execution Error",
            "Name": "CommandExecutionError",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "The extracted parameters after the execution of the command against the given endpoint.\n",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Extracted Parameters",
            "Name": "ExtractedParameters",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "json"
            }
          }
        ],
        "RetryDelay": 60,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 7200,
        "TimeoutPolicy": "Timeout"
      },
      "RollbackTasks": [],
      "SecurePropAccess": true,
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "category",
          "Value": "Executors"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.WorkflowDefinition",
      "DefaultVersion": true,
      "InputDefinition": [
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue"
          },
          "Description": "Name of the Tenant",
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "Tenanat Name",
          "Name": "tenantname",
          "ObjectType": "workflow.PrimitiveDataType",
          "Properties": {
            "Constraints": {
              "EnumList": [],
              "ObjectType": "workflow.Constraints"
            },
            "InventorySelector": [],
            "ObjectType": "workflow.PrimitiveDataProperty",
            "Type": "string"
          },
          "Required": true
        },
        {
          "Default": {
            "ObjectType": "workflow.DefaultValue",
            "Override": true,
            "Value": {
              "Ipv4Address": "10.113.89.231",
              "Ipv4Gateway1": "10.113.89.254",
              "Ipv4subnetmask": "255.255.255.0"
            }
          },
          "DisplayMeta": {
            "InventorySelector": true,
            "ObjectType": "workflow.DisplayMeta",
            "WidgetType": "None"
          },
          "Label": "IP address",
          "Name": "NetworkInterfaces1",
          "ObjectType": "workflow.CustomDataType",
          "Properties": {
            "CatalogMoid": "shared",
            "CustomDataTypeName": "NetworkInterfacesType",
            "ObjectType": "workflow.CustomDataProperty"
          },
          "Required": true
        }
      ],
      "InputParameterSet": [],
      "Label": "customized VM with IP and nginx",
      "Name": "zCreate-LAMP-POD_Clone01",
      "ObjectType": "workflow.WorkflowDefinition",
      "OutputDefinition": [],
      "OutputParameters": {},
      "Properties": {
        "ExternalMeta": true,
        "ObjectType": "workflow.WorkflowProperties",
        "SupportStatus": "Supported"
      },
      "SharedScope": "user",
      "Tags": [
        {
          "Key": "TSA",
          "Value": "Ajaz"
        },
        {
          "Key": "Type",
          "Value": "onprem"
        }
      ],
      "Tasks": [
        {
          "Name": "StartTask",
          "NextTask": "NewVirtualMachineFromTemplate1",
          "ObjectType": "workflow.StartTask"
        },
        {
          "CatalogMoid": "shared",
          "Description": "Create new virtual machine on the selected Hypervisor based on specifications in a virtual machine or template file. The inputs cluster (or host), datastore, and template name or virtual machine are mandatory. If folder name is specified, then virtual machine will be placed within the folder. On successful execution, name of virtual machine and template name or virtual machine are generated as outputs.",
          "InputParameters": {
            "Cluster": "/MEA-DC-LAB/host/hx-cluster01",
            "Datacenter": "/MEA-DC-LAB",
            "Datastore": "/MEA-DC-LAB/datastore/hxcluster01_DS",
            "Folder": "/MEA-DC-LAB/vm/ICO-tenant",
            "Name": "${workflow.input.tenantname}",
            "PowerOn": true,
            "Template": "/MEA-DC-LAB/vm/ICO-tenant/ICO-VM-IP-NGINX-Ansible"
          },
          "Label": "Create VM from Template",
          "Name": "NewVirtualMachineFromTemplate1",
          "ObjectType": "workflow.WorkerTask",
          "OnFailure": "FailureEndTask",
          "OnSuccess": "InvokeGuestCustomizationForLinuxVirtualMachine1",
          "TaskDefinitionName": "NewVirtualMachineFromTemplate",
          "Version": 1
        },
        {
          "CatalogMoid": "shared",
          "Description": "Guest Customization for a virtual machine. The virtual machine will be restarted to apply the customization. The inputs datacenter, virtual machine name, Hostname and timezone are mandatory. On successful execution, the customized properties of virtual machine will be generated as outputs.",
          "InputParameters": {
            "Datacenter": "/MEA-DC-LAB",
            "DnsServers": [
              "173.38.200.100"
            ],
            "Domain": "homerun.cisco.com",
            "Folder": "/MEA-DC-LAB/vm/ICO-tenant",
            "Name": "${workflow.input.tenantname}",
            "NetworkInterfaces1": "${workflow.input.NetworkInterfaces1}",
            "TimeZone": "Asia/Qatar",
            "VmName": "${workflow.input.tenantname}"
          },
          "Label": "Customization Hostname and IP",
          "Name": "InvokeGuestCustomizationForLinuxVirtualMachine1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "InvokeSshCommands1",
          "TaskDefinitionName": "InvokeGuestCustomizationForLinuxVirtualMachine",
          "Version": 1
        },
        {
          "Name": "SuccessEndTask",
          "ObjectType": "workflow.SuccessEndTask"
        },
        {
          "Name": "FailureEndTask",
          "ObjectType": "workflow.FailureEndTask"
        },
        {
          "CatalogMoid": "shared",
          "Description": "Executes Ansible Playbook against the given endpoint. This task can be executed on targets added as Ansible Endpoint in Intersight.\n",
          "InputParameters": {
            "HostInventory": "/root/ansible/nginx-ubunto/hosts",
            "PlaybookPath": "/root/ansible/nginx-ubunto/nginx-start.yaml",
            "Timeout": 4000
          },
          "Label": "Ansible Playbook to intall nginx",
          "Name": "InvokeAnsiblePlaybook1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "SuccessEndTask",
          "TaskDefinitionName": "InvokeAnsiblePlaybook",
          "Version": 1
        },
        {
          "CatalogMoid": "shared",
          "Description": "Executes SSH commands against the given endpoint. This task can be executed on targets added as SSH Endpoint or Ansible Endpoint in Intersight.\n",
          "InputParameters": {
            "SshCommand": {
              "Command": "echo \"[myhosts]\" > /root/ansible/nginx-ubunto/hosts && echo \"${workflow.input.NetworkInterfaces1.Ipv4Address} ansible_user=cadmin ansible_password=C1sc0123!\" >> /root/ansible/nginx-ubunto/hosts",
              "CommandType": "NonInteractiveCmd"
            }
          },
          "Label": " SSH  to update hosts file",
          "Name": "InvokeSshCommands1",
          "ObjectType": "workflow.WorkerTask",
          "OnSuccess": "InvokeAnsiblePlaybook1",
          "TaskDefinitionName": "InvokeSshCommands",
          "Version": 1
        }
      ],
      "UiInputFilters": [],
      "UiRenderingData": {
        "Positions": [
          {
            "Name": "StartTask",
            "X": 200.79455975558656,
            "Y": 41.031564401881376
          },
          {
            "Name": "SuccessEndTask",
            "X": 199.7565164817265,
            "Y": 463.89570362589916
          },
          {
            "Name": "FailureEndTask",
            "X": 341.7565164817265,
            "Y": 463.89570362589916
          },
          {
            "Name": "NewVirtualMachineFromTemplate1",
            "X": 114.75651648172646,
            "Y": 67.89570362589842
          },
          {
            "Name": "InvokeGuestCustomizationForLinuxVirtualMachine1",
            "X": 114.75651648172646,
            "Y": 166.8957036258984
          },
          {
            "Name": "InvokeAnsiblePlaybook1",
            "X": 114.75651648172646,
            "Y": 364.8957036258982
          },
          {
            "Name": "InvokeSshCommands1",
            "X": 114.75651648172646,
            "Y": 265.8957036258983
          }
        ]
      },
      "VariableDefinition": [],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/WorkflowDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Delete Vmware Virtual Machine.",
      "InterfaceTask": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveVirtualMachine\" and Version eq 3"
      },
      "Label": "Delete Vmware Virtual Machine",
      "Name": "RemoveVmwareVirtualMachineImpl",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "HypervisorManager",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "ConnectorAttribute": "Moid",
                "ConstraintAttributes": [
                  "PlatformType"
                ],
                "DisplayAttributes": [
                  "DeviceHostname",
                  "PlatformType",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType in ('HyperFlexAP', 'IWE', 'VmwareVcenter', 'AmazonWebService')",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.DeviceRegistration"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Platform type of the Virtualization device",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtualization Platform Type",
            "Name": "VirtualizationPlatformType",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualizationPlatformType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine to be deleted",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "VM",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "If selected, virtual machine will be powered off and then deleted safely",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Force Delete",
            "Name": "ForceDelete",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          }
        ],
        "RetryCount": 50,
        "RetryDelay": 15,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 120,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "platformType.VmwareVcenter",
          "Value": "true"
        }
      ],
      "Version": 3
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Remove Public Cloud virtual machine",
      "InterfaceTask": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveVirtualMachine\" and Version eq 3"
      },
      "Label": "Remove Public Cloud Virtual Machine",
      "Name": "RemoveCloudVirtualMachine",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "HypervisorManager",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "ConnectorAttribute": "Moid",
                "ConstraintAttributes": [
                  "PlatformType"
                ],
                "DisplayAttributes": [
                  "DeviceHostname",
                  "PlatformType",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType in ('HyperFlexAP', 'IWE', 'VmwareVcenter', 'AmazonWebService')",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.DeviceRegistration"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Platform type of the Virtualization device",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtualization Platform Type",
            "Name": "VirtualizationPlatformType",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualizationPlatformType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine to be deleted",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "VM",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "If selected, virtual machine will be powered off and then deleted safely",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Force Delete",
            "Name": "ForceDelete",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          }
        ],
        "RetryCount": 50,
        "RetryDelay": 15,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 120,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "platformType.AmazonWebService",
          "Value": "true"
        }
      ],
      "Version": 3
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Delete IWE virtual machine from hypervisor",
      "InterfaceTask": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveVirtualMachine\" and Version eq 3"
      },
      "Label": "Remove IWE Virtual Machine",
      "Name": "RemoveIWEVirtualMachine",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "HypervisorManager",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "ConnectorAttribute": "Moid",
                "ConstraintAttributes": [
                  "PlatformType"
                ],
                "DisplayAttributes": [
                  "DeviceHostname",
                  "PlatformType",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType in ('HyperFlexAP', 'IWE', 'VmwareVcenter', 'AmazonWebService')",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.DeviceRegistration"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Platform type of the Virtualization device",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtualization Platform Type",
            "Name": "VirtualizationPlatformType",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualizationPlatformType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine to be deleted",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "VM",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "If selected, virtual machine will be powered off and then deleted safely",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Force Delete",
            "Name": "ForceDelete",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          }
        ],
        "RetryCount": 50,
        "RetryDelay": 15,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 120,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Version": 3
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Deletes HyperFlex AP virtual machine from hypervisor",
      "InterfaceTask": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveVirtualMachine\" and Version eq 3"
      },
      "Label": "Remove HyperFlex AP Virtual Machine",
      "Name": "RemoveHyperFlexAPVirtualMachine",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "HypervisorManager",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "ConnectorAttribute": "Moid",
                "ConstraintAttributes": [
                  "PlatformType"
                ],
                "DisplayAttributes": [
                  "DeviceHostname",
                  "PlatformType",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType in ('HyperFlexAP', 'IWE', 'VmwareVcenter', 'AmazonWebService')",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                },
                "SupportedObjects": [
                  "asset.DeviceRegistration"
                ]
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Platform type of the Virtualization device",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtualization Platform Type",
            "Name": "VirtualizationPlatformType",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualizationPlatformType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine to be deleted",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "VM",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "If selected, virtual machine will be powered off and then deleted safely",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Force Delete",
            "Name": "ForceDelete",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          }
        ],
        "RetryCount": 50,
        "RetryDelay": 15,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 120,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Version": 3
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "New Vmware virtual machine from template or Clone from Virtual Machine",
      "InterfaceTask": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"NewVirtualMachineFromTemplate\" and Version eq 1"
      },
      "Label": "New Vmware Virtual Machine from Template or Clone from Virtual Machine",
      "Name": "NewVMFromTemplateImpl",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "Vcenter",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "DeviceHostname",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                }
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Datacenter where the virtual machine will be provisioned.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datacenter",
            "Name": "Datacenter",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatacenterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Cluster where the virtual machine will be provisioned.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Cluster",
            "Name": "Cluster",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorClusterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Host on which the virtual machine will be provisioned. Either a cluster or a host must be specified.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Host",
            "Name": "Host",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorHostType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Folder (optional) in which the virtual machine will be provisioned.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Folder",
            "Name": "Folder",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VmAndTemplateFolderType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Resource pool for the new virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Resource Pool",
            "Name": "ResourcePool",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Datastore allocated for this virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datastore",
            "Name": "Datastore",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatastoreType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Path of the template or virtual machine used to provision the virtual machine, template or virtual machine should be available locally in the hypervisor manager. When template or virtual machine is directly under a Datacenter  the template path or virtual machine path should be /<<DATACENTER>>/vm/<<TEMPLATE-NAME-or-VM-NAME>>\n\nWhen template or virtual machine is in a Datacenter and a Folder,  the template or virtual machine path should be /<<DATACENTER>>/vm/<<FOLDER>>/<<TEMPLATE-NAME-or-VM-Name>>\nFor example: Template 'Template1' in Datacenter 'DC1' should be /DC1/vm/Template1\nTemplate 'Template1' in Datacenter 'DC1' under a Folder 'Folder1', should be /DC1/vm/Folder1/Template1.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Template or Virtual Machine",
            "Name": "Template",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [
                {
                  "DisplayAttributes": [
                    "Name",
                    "InventoryPath",
                    "IsTemplate",
                    "PowerState"
                  ],
                  "ObjectType": "workflow.MoReferenceProperty",
                  "Selector": "/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseVirtualMachine)&$orderby=Name",
                  "SelectorProperty": {
                    "Method": "GET",
                    "ObjectType": "workflow.SelectorProperty"
                  },
                  "ValueAttribute": "InventoryPath"
                }
              ],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "Name",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Number of CPUs (optional) to allocate for the new virtual machine, if not provided will be taken from the template or virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "CPUs",
            "Name": "CPUs",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "Max": 1000,
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "integer"
            }
          },
          {
            "ArrayItemType": {
              "ObjectType": "workflow.PrimitiveArrayItem",
              "Properties": {
                "Constraints": {
                  "EnumList": [],
                  "ObjectType": "workflow.Constraints"
                },
                "InventorySelector": [],
                "ObjectType": "workflow.PrimitiveDataProperty",
                "Type": "json"
              }
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "GPU configurations to be applied on virtual machine",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "GPU configurations",
            "Name": "GpuConfigs",
            "ObjectType": "workflow.ArrayDataType"
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Memory (optional) allocation for the new virtual machine, in multiples of 4MB, if not provided will be taken from the template or virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Memory",
            "Name": "Memory",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "Max": 100000,
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "integer"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Annotation (optional) for the virtual machine, if not given, the virtual machine will have <no value> as annotation.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Annotation",
            "Name": "Annotation",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "If checked, virtual machine will be powered up after creation.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Power On",
            "Name": "PowerOn",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "boolean"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Network to be mapped to the Virtual Machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Network",
            "Name": "Network",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "Network",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "OVA environment customization spec as JSON.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "OVA Environment Spec",
            "Name": "OVAEnvSpec",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "json"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Configuration parameters specified as JSON.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Configuration Parameters",
            "Name": "ExtraConfig",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "json"
            }
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the Datacenter where virtual machine was created.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datacenter",
            "Name": "Datacenter",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatacenterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Host on which virtual machine runs.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Host",
            "Name": "Host",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorHostType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Cluster on which virtual machine runs.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Cluster",
            "Name": "Cluster",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorClusterType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "Name",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Name of the Template or Virtual Machine",
            "Name": "Template",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Folder Name for the new virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Folder",
            "Name": "Folder",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VmAndTemplateFolderType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "TaskId",
            "Name": "TaskId",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Platform type of the Virtualization device",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtualization Platform Type",
            "Name": "VirtualizationPlatformType",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualizationPlatformType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          }
        ],
        "RetryCount": 256,
        "RetryDelay": 30,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Beta",
        "Timeout": 100,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "platformType.VmwareVcenter",
          "Value": "true"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "ClassId": "workflow.TaskDefinition",
      "DefaultVersion": true,
      "Description": "Guest Customization for virtual machine",
      "InterfaceTask": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"InvokeGuestCustomizationForLinuxVirtualMachine\" and Version eq 1"
      },
      "Label": "NewGuestCustomizationforLinuxVM",
      "Name": "NewGuestCustomizationforLinuxImpl",
      "ObjectType": "workflow.TaskDefinition",
      "Properties": {
        "ExternalMeta": true,
        "InputDefinition": [
          {
            "CustomDataTypeProperties": {
              "CatalogMoid": "shared",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hypervisor Manager",
            "Name": "Vcenter",
            "ObjectType": "workflow.TargetDataType",
            "Properties": [
              {
                "DisplayAttributes": [
                  "DeviceHostname",
                  "Vendor"
                ],
                "ObjectType": "workflow.TargetProperty",
                "Selector": "/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'",
                "SelectorProperty": {
                  "Method": "GET",
                  "ObjectType": "workflow.SelectorProperty"
                }
              }
            ],
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Datacenter associated with the virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Datacenter",
            "Name": "Datacenter",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "HypervisorDatacenterType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Folder in which the virtual machine resides.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Folder",
            "Name": "Folder",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VmAndTemplateFolderType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Name of the virtual machine to be customized.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Virtual Machine",
            "Name": "VmName",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "VirtualMachineType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Hostname to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Hostname",
            "Name": "Name",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints",
                "Regex": "^[a-zA-Z0-9_-]*$"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Time Zone to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Time Zone",
            "Name": "TimeZone",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "LinuxTimeZoneType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "Domain associated with the virtual machine.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Domain",
            "Name": "Domain",
            "ObjectType": "workflow.PrimitiveDataType",
            "Properties": {
              "Constraints": {
                "EnumList": [],
                "ObjectType": "workflow.Constraints"
              },
              "InventorySelector": [],
              "ObjectType": "workflow.PrimitiveDataProperty",
              "Type": "string"
            }
          },
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Network Interfaces",
            "Name": "NetworkInterfaces1",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "NetworkInterfacesType",
              "ObjectType": "workflow.CustomDataProperty"
            }
          },
          {
            "ArrayItemType": {
              "ObjectType": "workflow.PrimitiveArrayItem",
              "Properties": {
                "Constraints": {
                  "EnumList": [],
                  "ObjectType": "workflow.Constraints"
                },
                "InventorySelector": [],
                "ObjectType": "workflow.PrimitiveDataProperty",
                "Type": "string"
              }
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "List of DNS servers to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "DNS Servers",
            "Max": 3,
            "Name": "DnsServers",
            "ObjectType": "workflow.ArrayDataType"
          },
          {
            "ArrayItemType": {
              "ObjectType": "workflow.PrimitiveArrayItem",
              "Properties": {
                "Constraints": {
                  "EnumList": [],
                  "ObjectType": "workflow.Constraints"
                },
                "InventorySelector": [],
                "ObjectType": "workflow.PrimitiveDataProperty",
                "Type": "string"
              }
            },
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "Description": "List of DNS suffixes to be configured for the virtual machine’s guest operating system.",
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "DNS Suffixes",
            "Max": 2,
            "Name": "DnsSuffixes",
            "ObjectType": "workflow.ArrayDataType"
          }
        ],
        "ObjectType": "workflow.Properties",
        "OutputDefinition": [
          {
            "Default": {
              "ObjectType": "workflow.DefaultValue"
            },
            "DisplayMeta": {
              "InventorySelector": true,
              "ObjectType": "workflow.DisplayMeta",
              "WidgetType": "None"
            },
            "Label": "Linux Guest Configurations",
            "Name": "vmConfig",
            "ObjectType": "workflow.CustomDataType",
            "Properties": {
              "CatalogMoid": "shared",
              "CustomDataTypeName": "LinuxVirtualMachineGuestCustomizationType",
              "ObjectType": "workflow.CustomDataProperty"
            },
            "Required": true
          }
        ],
        "RetryCount": 1,
        "RetryDelay": 100,
        "RetryPolicy": "Fixed",
        "SupportStatus": "Supported",
        "Timeout": 300,
        "TimeoutPolicy": "Retry"
      },
      "RollbackTasks": [],
      "SharedScope": "shared",
      "Tags": [
        {
          "Key": "platformType.VmwareVcenter",
          "Value": "true"
        }
      ],
      "Version": 1
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/TaskDefinitions",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "ContentType": "text",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Start Ansible Session",
          "MessageType": "NewSession",
          "Name": "StartAnsibleSession",
          "ObjectType": "workflow.SshSession",
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          }
        },
        {
          "ContentType": "text",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Check Ansible Playbook Syntax",
          "MessageType": "ExecuteCommand",
          "Name": "CheckAnsiblePlaybookSyntax",
          "ObjectType": "workflow.SshSession",
          "SshCommand": {
            "Command": "ansible-playbook -i {{.global.task.input.HostInventory}} {{.global.task.input.PlaybookPath}} {{.global.task.input.CommandLineArguments}} -v --syntax-check\n",
            "CommandType": "NonInteractiveCmd"
          },
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          },
          "SshOpTimeout": "120"
        },
        {
          "ContentType": "text",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Prepare Ansible Execution Env",
          "MessageType": "ExecuteCommand",
          "Name": "PrepareAnsibleExecutionEnv",
          "ObjectType": "workflow.SshSession",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "IsDelimiter": false,
                "IsNextCaptureOnSameLine": false,
                "ItemType": "simple",
                "Name": "AnsibleLogPath",
                "ObjectType": "content.TextParameter",
                "Path": ".*",
                "RegexLine": "${AnsibleLogPath}",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "SshCommand": {
            "Command": "env ANSIBLE_LOG_PATH=$(dirname {{.global.task.input.PlaybookPath}})/ansible_$(date \"+%F_%H-%M-%S\").log sh -c 'touch $ANSIBLE_LOG_PATH; echo $ANSIBLE_LOG_PATH'\n",
            "CommandType": "NonInteractiveCmd"
          },
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          },
          "SshOpTimeout": "120"
        },
        {
          "ContentType": "text",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Invoke Ansible Playbook",
          "MessageType": "ExecuteCommand",
          "Name": "InvokeAnsiblePlaybook",
          "ObjectType": "workflow.SshSession",
          "Outcomes": [
            {
              "Condition": "{{- if index .global.InvokeAnsiblePlaybook.output \"AnsibleExecutionSummary\" -}}\n  {{range $key, $value := .global.InvokeAnsiblePlaybook.output.AnsibleExecutionSummary}}\n    {{if ne $value.FailedTasksCount \"0\"}}true{{end}}\n  {{- end -}}\n{{- else -}}\n  false\n{{- end -}}",
              "Error": true,
              "Message": "Ansible playbook execution failed on one or more nodes.\nPlease refer the execution logs at the below path for more details.\n{{.global.PrepareAnsibleExecutionEnv.output.AnsibleLogPath}}\n",
              "ObjectType": "workflow.Outcome"
            },
            {
              "Condition": "{{- if index .global.InvokeAnsiblePlaybook.output \"AnsibleExecutionSummary\" -}}\n  {{range $key, $value := .global.InvokeAnsiblePlaybook.output.AnsibleExecutionSummary}}\n    {{if ne $value.UnreachableTasksCount \"0\"}}true{{end}}\n  {{- end -}}\n{{- else -}}\n  false\n{{- end -}}",
              "Error": true,
              "Message": "Unable to establish connectivity from Ansible Controller to one or more worker nodes.\nPlease refer the execution logs at the below path for more details.\n{{.global.PrepareAnsibleExecutionEnv.output.AnsibleLogPath}}\n",
              "ObjectType": "workflow.Outcome"
            },
            {
              "Condition": "{{- if index .global.InvokeAnsiblePlaybook.output \"ExitCode\" -}}\n  {{if ne .global.InvokeAnsiblePlaybook.output.ExitCode 0}}true{{end}}\n{{- end -}}",
              "Error": true,
              "Message": "Ansible playbook execution failed with non-zero exit code: {{.global.InvokeAnsiblePlaybook.output.ExitCode}}.\n{{- if index .global.InvokeAnsiblePlaybook.output \"CommandExecutionError\" }} Error while executing Ansible playbook command:\n{{.global.InvokeAnsiblePlaybook.output.CommandExecutionError}} {{- end -}}\n",
              "ObjectType": "workflow.Outcome"
            },
            {
              "Condition": "true",
              "Message": "Ansible playbook execution completed. Please refer the execution logs at the below path for more details.\n{{.global.PrepareAnsibleExecutionEnv.output.AnsibleLogPath}}\n",
              "ObjectType": "workflow.Outcome",
              "OutcomeType": "Success"
            }
          ],
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "AnsibleExecutionSummary",
                "IsDelimiter": false,
                "IsNextCaptureOnSameLine": false,
                "ItemType": "complex",
                "Name": "AnsibleExecutionSummary",
                "ObjectType": "content.TextParameter",
                "Path": "",
                "RegexLine": "PLAY RECAP",
                "Secure": false,
                "Type": "collection"
              }
            ],
            "Types": [
              {
                "Name": "AnsibleExecutionSummary",
                "ObjectType": "content.ComplexType",
                "Parameters": [
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "IsDelimiter": false,
                    "IsNextCaptureOnSameLine": true,
                    "ItemType": "simple",
                    "Name": "Node",
                    "ObjectType": "content.TextParameter",
                    "Path": ".*?",
                    "RegexLine": "${Node}\\s+:\\s+ok=\\d+\\s+changed=\\d+\\s+unreachable=\\d+\\s+failed=\\d+.*",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "IsDelimiter": false,
                    "IsNextCaptureOnSameLine": true,
                    "ItemType": "simple",
                    "Name": "SuccessTasksCount",
                    "ObjectType": "content.TextParameter",
                    "Path": "\\d+",
                    "RegexLine": ".*?\\s+:\\s+ok=${SuccessTasksCount}\\s+changed=\\d+\\s+unreachable=\\d+\\s+failed=\\d+.*",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "IsDelimiter": false,
                    "IsNextCaptureOnSameLine": true,
                    "ItemType": "simple",
                    "Name": "ChangedTasksCount",
                    "ObjectType": "content.TextParameter",
                    "Path": "\\d+",
                    "RegexLine": ".*?\\s+:\\s+ok=\\d+\\s+changed=${ChangedTasksCount}\\s+unreachable=\\d+\\s+failed=\\d+.*",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "IsDelimiter": false,
                    "IsNextCaptureOnSameLine": true,
                    "ItemType": "simple",
                    "Name": "UnreachableTasksCount",
                    "ObjectType": "content.TextParameter",
                    "Path": "\\d+",
                    "RegexLine": ".*?\\s+:\\s+ok=\\d+\\s+changed=\\d+\\s+unreachable=${UnreachableTasksCount}\\s+failed=\\d+.*",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "IsDelimiter": false,
                    "IsNextCaptureOnSameLine": false,
                    "ItemType": "simple",
                    "Name": "FailedTasksCount",
                    "ObjectType": "content.TextParameter",
                    "Path": "\\d+",
                    "RegexLine": ".*?\\s+:\\s+ok=\\d+\\s+changed=\\d+\\s+unreachable=\\d+\\s+failed=${FailedTasksCount}.*",
                    "Secure": false,
                    "Type": "simple"
                  }
                ]
              }
            ]
          },
          "SshCommand": {
            "Command": "env ANSIBLE_LOG_PATH={{.global.PrepareAnsibleExecutionEnv.output.AnsibleLogPath}} ansible-playbook -i {{.global.task.input.HostInventory}} {{.global.task.input.PlaybookPath}} {{.global.task.input.CommandLineArguments}} -v\n",
            "CommandType": "NonInteractiveCmd"
          },
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          },
          "SshOpTimeout": "{{- if index .global.task.input \"Timeout\" -}}\n  {{Itoa .global.task.input.Timeout}}\n{{- end -}}"
        },
        {
          "ContentType": "text",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Close Ansible Session",
          "MessageType": "CloseSession",
          "Name": "CloseAnsibleSession",
          "ObjectType": "workflow.SshSession",
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          }
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.AnsibleBatchExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Generic Ansible Batch Task",
      "Name": "GenericAnsibleBatchTask",
      "ObjectType": "workflow.AnsibleBatchExecutor",
      "Output": {
        "ExecutionLogPath": "{{- if index .global.PrepareAnsibleExecutionEnv.output \"AnsibleLogPath\" -}}\n  {{- .global.PrepareAnsibleExecutionEnv.output.AnsibleLogPath -}}\n{{- end -}}",
        "ExecutionSummary": "{{- if index .global.InvokeAnsiblePlaybook.output \"AnsibleExecutionSummary\" -}}\n  {{- .global.InvokeAnsiblePlaybook.output.AnsibleExecutionSummary | ToJson -}}\n{{- end -}}",
        "ExitCode": "{{.global.InvokeAnsiblePlaybook.output.ExitCode}}"
      },
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"InvokeAnsiblePlaybook\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/AnsibleBatchExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "ContentType": "text",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Start Ssh Session",
          "MessageType": "NewSession",
          "Name": "StartSshSession",
          "ObjectType": "workflow.SshSession",
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          }
        },
        {
          "CaptureCompleteResponse": "{{Btoa .global.task.input.ShowCommandOutput}}",
          "ContentType": "text",
          "ExpectedExitCodes": "{{- if index .global.task.input \"ExpectedExitCodes\" -}}\n  {{.global.task.input.ExpectedExitCodes | ToJson}}\n{{- end -}}",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Invoke Ssh Operation",
          "MessageType": "ExecuteCommand",
          "Name": "InvokeSshOperation",
          "ObjectType": "workflow.SshSession",
          "ResponseSpec": "{{- if index .global.task.input \"ResponseParser\" -}}\n  {{.global.task.input.ResponseParser | ToJson}}\n{{- end -}}",
          "SshCommand": "{{- if index .global.task.input \"SshCommand\" -}}\n  {{.global.task.input.SshCommand | ToJson}}\n{{- end -}}",
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          },
          "SshOpTimeout": "{{- if index .global.task.input \"Timeout\" -}}\n  {{Itoa .global.task.input.Timeout}}\n{{- end -}}"
        },
        {
          "ContentType": "text",
          "FileTransferToRemote": {
            "ObjectType": "workflow.FileTransfer"
          },
          "Label": "Close Ssh Session",
          "MessageType": "CloseSession",
          "Name": "CloseSshSession",
          "ObjectType": "workflow.SshSession",
          "SshConfiguration": {
            "ObjectType": "workflow.SshConfig"
          }
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.SshBatchExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Generic SSH Batch Task",
      "Name": "GenericSshBatchTask",
      "ObjectType": "workflow.SshBatchExecutor",
      "Output": {
        "CommandExecutionError": "{{- if index .global.InvokeSshOperation.output \"CommandExecutionError\" -}}\n  {{.global.InvokeSshOperation.output.CommandExecutionError}}\n{{- end -}}",
        "CommandOutput": "{{- if index .global.InvokeSshOperation.output \"CommandResponse\" -}}\n  {{.global.InvokeSshOperation.output.CommandResponse}}\n{{- end -}}",
        "ExitCode": "{{.global.InvokeSshOperation.output.ExitCode}}",
        "ExtractedParameters": "{{- if index .global.InvokeSshOperation \"output\" -}}\n  {{RemoveKeysFromMap .global.InvokeSshOperation.output \"ExitCode\" \"CommandResponse\" \"CommandExecutionError\" | ToJson}}\n{{- end -}}"
      },
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"InvokeSshCommands\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/SshBatchExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "SelectVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{ne (len .global.SelectVirtualMachineImpl.output.Results) 1}}",
              "Message": "Virtual Machine delete request marked successful. Virtual machine may not exist at the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "Result",
                "ItemType": "complex",
                "Name": "Results",
                "ObjectType": "content.Parameter",
                "Path": "$.Results",
                "Secure": false,
                "Type": "collection"
              }
            ],
            "Types": [
              {
                "Name": "Result",
                "ObjectType": "content.ComplexType",
                "Parameters": [
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Name",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Name",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "PowerState",
                    "ObjectType": "content.Parameter",
                    "Path": "$.PowerState",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Moid",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Moid",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "VMConfigForceDelete",
                    "ObjectType": "content.Parameter",
                    "Path": "$.ForceDelete",
                    "Secure": false,
                    "Type": "simple"
                  }
                ]
              }
            ]
          },
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines?$filter=(VmConfig.InventoryPath eq '{{.global.task.input.VirtualizationPlatformType.VM}}'  {{if index .global.task.input.VirtualizationPlatformType \"Datacenter\"}}{{if .global.task.input.VirtualizationPlatformType.Datacenter}}and VmConfig.Datacenter eq '{{.global.task.input.VirtualizationPlatformType.Datacenter}}' {{end}}{{end}}  {{if index .global.task.input.VirtualizationPlatformType \"Folder\"}}{{if .global.task.input.VirtualizationPlatformType.Folder}} and VmConfig.Folder eq '{{.global.task.input.VirtualizationPlatformType.Folder}}'{{end}}{{end}})"
        },
        {
          "Body": "{\"Name\": \"{{ (index .global.SelectVirtualMachineImpl.output.Results 0).Name}}\",\"Action\": \"PowerState\",\"PowerState\": \"PowerOff\",\"RegisteredDevice\": \"{{.global.task.input.HypervisorManager.Moid}}\"}",
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "POST",
          "Name": "EditVirtualMachinePowerOffImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{(ne .global.EditVirtualMachinePowerOffImpl.output.HttpStatusCode 200)}}",
              "Message": "Failed to power off virtual machine. Message: {{.global.EditVirtualMachinePowerOffImpl.output.HttpStatusMsg}}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "true",
              "Message": "Power off action initiated for the virtual machine.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "SkipOnCondition": "{{if or (eq .global.task.input.VirtualizationPlatformType.ForceDelete false ) (eq (index .global.SelectVirtualMachineImpl.output.Results 0).PowerState \"PowerOff\") (eq (index .global.SelectVirtualMachineImpl.output.Results 0).VMConfigForceDelete true)}} true {{else}} false {{end}}",
          "TargetType": "Local",
          "Timeout": 120,
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.SelectVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "WatchVirtualMachinePowerStatusImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"queued\")}}true{{end}}",
              "Message": "Power off action initiated for the virtual machine '{{ (index .global.SelectVirtualMachineImpl.output.Results 0).Name}}'.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"InProgress\")}}true{{end}}",
              "Message": "Power off action initiated for the virtual machine '{{ (index .global.SelectVirtualMachineImpl.output.Results 0).Name}}'.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"Success\")}}true{{end}}",
              "Message": "Virtual machine '{{ (index .global.SelectVirtualMachineImpl.output.Results 0).Name}}' powered off successfully and is ready for removal.",
              "ObjectType": "workflow.Outcome"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"Failure\")}}true{{end}}",
              "Message": "{{ .global.WatchVirtualMachinePowerStatusImpl.output.FailureReason }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{(ne .global.WatchVirtualMachinePowerStatusImpl.output.HttpStatusCode 200)}}",
              "Message": "Failed to power off virtual machine '{{ (index .global.SelectVirtualMachineImpl.output.Results 0).Name}}' . Message: {{.global.WatchVirtualMachinePowerStatusImpl.output.Error}}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.ActionInfo.Status",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Error",
                "ObjectType": "content.Parameter",
                "Path": "$.Error",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "FailureReason",
                "ObjectType": "content.Parameter",
                "Path": "$.ActionInfo.FailureReason",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "SkipOnCondition": "{{if or (eq .global.task.input.VirtualizationPlatformType.ForceDelete false ) (eq (index .global.SelectVirtualMachineImpl.output.Results 0).PowerState \"PowerOff\") (eq (index .global.SelectVirtualMachineImpl.output.Results 0).VMConfigForceDelete true)}} true {{else}} false {{end}}",
          "TargetType": "Local",
          "Timeout": 120,
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.SelectVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "DELETE",
          "Name": "RemoveVmwareVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{eq .global.RemoveVmwareVirtualMachineImpl.output.code \"Conflict\"}}",
              "Message": "Failed to remove virtual machine. Message: {{ .global.RemoveVmwareVirtualMachineImpl.output.Message }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{eq .global.RemoveVmwareVirtualMachineImpl.output.HttpStatusCode 404}}",
              "Message": "Virtual Machine '{{ (index .global.SelectVirtualMachineImpl.output.Results 0).Name}}' delete request marked successful. Virtual machine may not exist in the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "code",
                "ObjectType": "content.Parameter",
                "Path": "$.code",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Message",
                "ObjectType": "content.Parameter",
                "Path": "$.message",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "MessageParams",
                "ObjectType": "content.Parameter",
                "Path": "$.messageParams",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Timeout": 180,
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.SelectVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "WatchVmwareRemoveVMStatusImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{or (ContainsString .global.WatchVmwareRemoveVMStatusImpl.output.Status \"RUNNING\") (ContainsString .global.WatchVmwareRemoveVMStatusImpl.output.Status \"WAIT\")}}",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{eq .global.WatchVmwareRemoveVMStatusImpl.output.Status \"COMPLETED\"}}",
              "Message": "Virtual Machine '{{(index .global.SelectVirtualMachineImpl.output.Results 0).Name}}' removed successfully.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "{{ne .global.WatchVmwareRemoveVMStatusImpl.output.HttpStatusCode 200}}",
              "Message": "Failed to remove virtual machine '{{(index .global.SelectVirtualMachineImpl.output.Results 0).Name}}'-. Message: {{ .global.WatchVmwareRemoveVMStatusImpl.output.HttpStatusMsg }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.Status",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Timeout": 180,
          "Url": "/v1/workflow/WorkflowInfos/{{(index (FindAllString (index .global.RemoveVmwareVirtualMachineImpl.output.MessageParams \"1\") \"([^/]+)$\") 0)}}"
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints",
        "TargetDataType": {
          "PlatformType": "VmwareVcenter"
        }
      },
      "Description": "Delete Vmware virtual machine.",
      "Name": "RemoveVmwareVirtualMachineImpl",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {
        "ForceDelete": "{{.global.task.input.VirtualizationPlatformType.ForceDelete}}",
        "VM": "{{.global.task.input.VirtualizationPlatformType.VM}}"
      },
      "RetryFromFailedApi": true,
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveVmwareVirtualMachineImpl\" and Version eq 3"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "GetAWSVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{ne (len .global.GetAWSVirtualMachineImpl.output.Results) 1}}",
              "Message": "Virtual Machine delete request marked successful. Virtual machine may not exist at the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "Result",
                "ItemType": "complex",
                "Name": "Results",
                "ObjectType": "content.Parameter",
                "Path": "$.Results",
                "Secure": false,
                "Type": "collection"
              }
            ],
            "Types": [
              {
                "Name": "Result",
                "ObjectType": "content.ComplexType",
                "Parameters": [
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Name",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Name",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Moid",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Moid",
                    "Secure": false,
                    "Type": "simple"
                  }
                ]
              }
            ]
          },
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines?$filter=(VmConfig.VmId eq '{{.global.task.input.VirtualizationPlatformType.VmIdentity}}')"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "DELETE",
          "Name": "RemoveCloudVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{eq .global.RemoveCloudVirtualMachineImpl.output.code \"Conflict\"}}",
              "Message": "Failed to remove virtual machine. Message: {{ .global.RemoveCloudVirtualMachineImpl.output.Message }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{eq .global.RemoveCloudVirtualMachineImpl.output.HttpStatusCode 404}}",
              "Message": "Virtual Machine '{{ (index .global.GetAWSVirtualMachineImpl.output.Results 0).Name}}' delete request marked successful. Virtual machine may not exist in the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "code",
                "ObjectType": "content.Parameter",
                "Path": "$.code",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Message",
                "ObjectType": "content.Parameter",
                "Path": "$.message",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "MessageParams",
                "ObjectType": "content.Parameter",
                "Path": "$.messageParams",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Timeout": 180,
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.GetAWSVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "WatchAWSRemoveVMStatusImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{or (ContainsString .global.WatchAWSRemoveVMStatusImpl.output.Status \"RUNNING\") (ContainsString .global.WatchAWSRemoveVMStatusImpl.output.Status \"WAIT\")}}",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{eq .global.WatchAWSRemoveVMStatusImpl.output.Status \"COMPLETED\"}}",
              "Message": "Virtual Machine '{{(index .global.GetAWSVirtualMachineImpl.output.Results 0).Name}}' removed successfully.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "{{ne .global.WatchAWSRemoveVMStatusImpl.output.HttpStatusCode 200}}",
              "Message": "Failed to remove virtual machine '{{(index .global.GetAWSVirtualMachineImpl.output.Results 0).Name}}'-. Message: {{ .global.WatchAWSRemoveVMStatusImpl.output.HttpStatusMsg }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.Status",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Url": "/v1/workflow/WorkflowInfos/{{(index (FindAllString (index .global.RemoveCloudVirtualMachineImpl.output.MessageParams \"1\") \"([^/]+)$\") 0)}}"
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints",
        "TargetDataType": {
          "PlatformType": "AmazonWebService"
        }
      },
      "Description": "Remove virtual machine",
      "Name": "RemoveCloudVirtualMachine",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {
        "VM": "{{(index .global.GetAWSVirtualMachineImpl.output.Results 0).Name}}"
      },
      "RetryFromFailedApi": true,
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveCloudVirtualMachine\" and Version eq 3"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "GetIWEVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{ne (len .global.GetIWEVirtualMachineImpl.output.Results) 1}}",
              "Message": "Virtual Machine delete request marked successful. Virtual machine may not exist at the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "Result",
                "ItemType": "complex",
                "Name": "Results",
                "ObjectType": "content.Parameter",
                "Path": "$.Results",
                "Secure": false,
                "Type": "collection"
              }
            ],
            "Types": [
              {
                "Name": "Result",
                "ObjectType": "content.ComplexType",
                "Parameters": [
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Name",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Name",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "PowerState",
                    "ObjectType": "content.Parameter",
                    "Path": "$.PowerState",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Moid",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Moid",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "VMConfigForceDelete",
                    "ObjectType": "content.Parameter",
                    "Path": "$.ForceDelete",
                    "Secure": false,
                    "Type": "simple"
                  }
                ]
              }
            ]
          },
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines?$filter=(Inventory.Moid eq '{{.global.task.input.VirtualizationPlatformType.VM}}')"
        },
        {
          "Body": "{\"Name\": \"{{ (index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}\",\"Action\": \"PowerState\",\"PowerState\": \"PowerOff\",\"RegisteredDevice\": \"{{.global.task.input.HypervisorManager.Moid}}\"}",
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "POST",
          "Name": "EditVirtualMachinePowerOffImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{(ne .global.EditVirtualMachinePowerOffImpl.output.HttpStatusCode 200)}}",
              "Message": "Failed to power off virtual machine. Message: {{.global.EditVirtualMachinePowerOffImpl.output.HttpStatusMsg}}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "true",
              "Message": "Power off action initiated for the virtual machine.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "SkipOnCondition": "{{if or (eq .global.task.input.VirtualizationPlatformType.ForceDelete false ) (eq (index .global.GetIWEVirtualMachineImpl.output.Results 0).PowerState \"PowerOff\") (eq (index .global.GetIWEVirtualMachineImpl.output.Results 0).VMConfigForceDelete true)}} true {{else}} false {{end}}",
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.GetIWEVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "WatchVirtualMachinePowerStatusImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{(ne .global.WatchVirtualMachinePowerStatusImpl.output.HttpStatusCode 200)}}",
              "Message": "Failed to power off virtual machine '{{ (index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}' . Message: {{.global.WatchVirtualMachinePowerStatusImpl.output.Error}}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"Failure\")}}true{{end}}",
              "Message": "{{ .global.WatchVirtualMachinePowerStatusImpl.output.FailureReason }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"InProgress\")}}true{{end}}",
              "Message": "Power off action initiated for the virtual machine '{{ (index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}'.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"queued\")}}true{{end}}",
              "Message": "Power off action initiated for the virtual machine '{{ (index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}'.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"Success\")}}true{{end}}",
              "Message": "Virtual machine '{{ (index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}' powered off successfully.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.ActionInfo.Status",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Error",
                "ObjectType": "content.Parameter",
                "Path": "$.Error",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "FailureReason",
                "ObjectType": "content.Parameter",
                "Path": "$.ActionInfo.FailureReason",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "SkipOnCondition": "{{if or (eq .global.task.input.VirtualizationPlatformType.ForceDelete false ) (eq (index .global.GetIWEVirtualMachineImpl.output.Results 0).PowerState \"PowerOff\") (eq (index .global.GetIWEVirtualMachineImpl.output.Results 0).VMConfigForceDelete true)}} true {{else}} false {{end}}",
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.GetIWEVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "DELETE",
          "Name": "RemoveIWEVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{eq .global.RemoveIWEVirtualMachineImpl.output.code \"Conflict\"}}",
              "Message": "Failed to remove virtual machine. Message: {{ .global.RemoveIWEVirtualMachineImpl.output.Message }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{eq .global.RemoveIWEVirtualMachineImpl.output.HttpStatusCode 404}}",
              "Message": "Virtual Machine '{{ (index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}' delete request marked successful. Virtual machine may not exist in the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "code",
                "ObjectType": "content.Parameter",
                "Path": "$.code",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Message",
                "ObjectType": "content.Parameter",
                "Path": "$.message",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "MessageParams",
                "ObjectType": "content.Parameter",
                "Path": "$.messageParams",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.GetIWEVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "WatchRemoveIWEVMStatusImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{eq .global.WatchRemoveIWEVMStatusImpl.output.Status \"COMPLETED\"}}",
              "Message": "Virtual Machine '{{(index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}' removed successfully.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "{{or (ContainsString .global.WatchRemoveIWEVMStatusImpl.output.Status \"RUNNING\") (ContainsString .global.WatchRemoveIWEVMStatusImpl.output.Status \"WAIT\")}}",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{ne .global.WatchRemoveIWEVMStatusImpl.output.HttpStatusCode 200}}",
              "Message": "Failed to remove virtual machine '{{(index .global.GetIWEVirtualMachineImpl.output.Results 0).Name}}'-. Message: {{ .global.WatchRemoveIWEVMStatusImpl.output.HttpStatusMsg }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.Status",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Url": "/v1/workflow/WorkflowInfos/{{(index (FindAllString (index .global.RemoveIWEVirtualMachineImpl.output.MessageParams \"1\") \"([^/]+)$\") 0)}}"
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints",
        "TargetDataType": {
          "PlatformType": "IWE"
        }
      },
      "Description": "Delete an existing IWE virtual machine",
      "Name": "RemoveIWEVirtualMachine",
      "ObjectType": "workflow.BatchApiExecutor",
      "RetryFromFailedApi": true,
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveIWEVirtualMachine\" and Version eq 3"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "GetHyperFlexAPVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{ne (len .global.GetHyperFlexAPVirtualMachineImpl.output.Results) 1}}",
              "Message": "Virtual Machine delete request marked successful. Virtual machine may not exist at the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "Result",
                "ItemType": "complex",
                "Name": "Results",
                "ObjectType": "content.Parameter",
                "Path": "$.Results",
                "Secure": false,
                "Type": "collection"
              }
            ],
            "Types": [
              {
                "Name": "Result",
                "ObjectType": "content.ComplexType",
                "Parameters": [
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Name",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Name",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "PowerState",
                    "ObjectType": "content.Parameter",
                    "Path": "$.PowerState",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Moid",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Moid",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "VMConfigForceDelete",
                    "ObjectType": "content.Parameter",
                    "Path": "$.ForceDelete",
                    "Secure": false,
                    "Type": "simple"
                  }
                ]
              }
            ]
          },
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines?$filter=(Inventory.Moid eq '{{.global.task.input.VirtualizationPlatformType.VM}}')"
        },
        {
          "Body": "{\"Name\": \"{{ (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}\",\"Action\": \"PowerState\",\"PowerState\": \"PowerOff\",\"RegisteredDevice\": \"{{.global.task.input.HypervisorManager.Moid}}\"}",
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "POST",
          "Name": "EditVirtualMachinePowerOffImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{(ne .global.EditVirtualMachinePowerOffImpl.output.HttpStatusCode 200)}}",
              "Message": "Failed to power off virtual machine. Message: {{.global.EditVirtualMachinePowerOffImpl.output.HttpStatusMsg}}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "true",
              "Message": "Power off action initiated for the virtual machine.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "SkipOnCondition": "{{if or (eq .global.task.input.VirtualizationPlatformType.ForceDelete false ) (eq (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).PowerState \"PowerOff\") (eq (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).VMConfigForceDelete true)}} true {{else}} false {{end}}",
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "WatchVirtualMachinePowerStatusImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{(ne .global.WatchVirtualMachinePowerStatusImpl.output.HttpStatusCode 200)}}",
              "Message": "Failed to power off virtual machine '{{ (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}' . Message: {{.global.WatchVirtualMachinePowerStatusImpl.output.Error}}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"Failure\")}}true{{end}}",
              "Message": "{{ .global.WatchVirtualMachinePowerStatusImpl.output.FailureReason }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"InProgress\")}}true{{end}}",
              "Message": "Power off action initiated for the virtual machine '{{ (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}'.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"queued\")}}true{{end}}",
              "Message": "Power off action initiated for the virtual machine '{{ (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}'.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchVirtualMachinePowerStatusImpl.output.Status \"Success\")}}true{{end}}",
              "Message": "Virtual machine '{{ (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}' powered off successfully.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.ActionInfo.Status",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Error",
                "ObjectType": "content.Parameter",
                "Path": "$.Error",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "FailureReason",
                "ObjectType": "content.Parameter",
                "Path": "$.ActionInfo.FailureReason",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "SkipOnCondition": "{{if or (eq .global.task.input.VirtualizationPlatformType.ForceDelete false ) (eq (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).PowerState \"PowerOff\") (eq (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).VMConfigForceDelete true)}} true {{else}} false {{end}}",
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "DELETE",
          "Name": "RemoveHyperFlexAPVirtualMachineImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{eq .global.RemoveHyperFlexAPVirtualMachineImpl.output.code \"Conflict\"}}",
              "Message": "Failed to remove virtual machine. Message: {{ .global.RemoveHyperFlexAPVirtualMachineImpl.output.Message }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{eq .global.RemoveHyperFlexAPVirtualMachineImpl.output.HttpStatusCode 404}}",
              "Message": "Virtual Machine '{{ (index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}' delete request marked successful. Virtual machine may not exist in the given location.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "code",
                "ObjectType": "content.Parameter",
                "Path": "$.code",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Message",
                "ObjectType": "content.Parameter",
                "Path": "$.message",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "MessageParams",
                "ObjectType": "content.Parameter",
                "Path": "$.messageParams",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Url": "/v1/virtualization/VirtualMachines/{{(index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Moid}}"
        },
        {
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "GET",
          "Name": "WatchRemoveHyperFlexAPVMStatusImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{eq .global.WatchRemoveHyperFlexAPVMStatusImpl.output.Status \"COMPLETED\"}}",
              "Message": "Virtual Machine '{{(index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}' removed successfully.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "{{or (ContainsString .global.WatchRemoveHyperFlexAPVMStatusImpl.output.Status \"RUNNING\") (ContainsString .global.WatchRemoveHyperFlexAPVMStatusImpl.output.Status \"WAIT\")}}",
              "Message": "Remove virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{ne .global.WatchRemoveHyperFlexAPVMStatusImpl.output.HttpStatusCode 200}}",
              "Message": "Failed to remove virtual machine '{{(index .global.GetHyperFlexAPVirtualMachineImpl.output.Results 0).Name}}'-. Message: {{ .global.WatchRemoveHyperFlexAPVMStatusImpl.output.HttpStatusMsg }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.Status",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Local",
          "Url": "/v1/workflow/WorkflowInfos/{{(index (FindAllString (index .global.RemoveHyperFlexAPVirtualMachineImpl.output.MessageParams \"1\") \"([^/]+)$\") 0)}}"
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints",
        "TargetDataType": {
          "PlatformType": "HyperFlexAP"
        }
      },
      "Description": "Delete an existing HyperFlexAP virtual machine",
      "Name": "RemoveHyperFlexAPVirtualMachine",
      "ObjectType": "workflow.BatchApiExecutor",
      "RetryFromFailedApi": true,
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"RemoveHyperFlexAPVirtualMachine\" and Version eq 3"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{ \"ExtraConfig\": {{.global.task.input.ExtraConfig | ToJson}}, \"GpuConfigs\": {{.global.task.input.GpuConfigs | ToJson}}, \"OVFEnv\": {{.global.task.input.OVAEnvSpec | ToJson}}, \"Network\":{{ if .global.task.input.Network}}\"{{.global.task.input.Network}}\",{{else}}\"\",{{end}}\"Name\":\"{{.global.task.input.Name}}\" , \"Template\":\"{{.global.task.input.Template}}\", {{if .global.task.input.Datacenter}}\"Datacenter\":\"{{.global.task.input.Datacenter}}\", {{ else }}\"Datacenter\": \"\",{{end}} {{if .global.task.input.Folder}}\"Folder\":\"{{.global.task.input.Folder}}\", {{ else }}\"Folder\": \"\",{{end}} {{if .global.task.input.Cluster}}\"Cluster\":\"{{.global.task.input.Cluster}}\", {{ else }}\"Cluster\": \"\",{{end}} {{if .global.task.input.PowerOn}}\"Poweron\":{{.global.task.input.PowerOn}},{{ else }}\"Poweron\": false,{{end}} {{if .global.task.input.Host}}\"Host\":\"{{.global.task.input.Host}}\", {{ else }}\"Host\": \"\",{{end}}  {{if .global.task.input.ResourcePool}}\"ResourcePool\":\"{{.global.task.input.ResourcePool}}\",{{ else }}\"ResourcePool\": \"\",{{end}} \"Datastore\":\"{{.global.task.input.Datastore}}\" ,  {{if .global.task.input.Annotation}}\"Annotation\":\"{{.global.task.input.Annotation}}\" , {{ else }}\"Annotation\": \"\",{{end}} {{if .global.task.input.CPUs}}\"CPUs\":{{.global.task.input.CPUs}},{{ else }}\"CPUs\": 0,{{end}} {{if .global.task.input.Memory}}\"Memory\":{{.global.task.input.Memory}},{{end}} \"Vcenter\":\"{{.global.task.input.Vcenter}}\" }",
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "POST",
          "Name": "NewVMFromTemplateImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{(ne .global.NewVMFromTemplateImpl.output.HttpStatusCode 200)}}",
              "Message": "Failed to provision virtual machine '{{.global.task.input.Name}}'. Message: {{.global.NewVMFromTemplateImpl.output.HttpStatusMsg}}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{ and (eq .global.NewVMFromTemplateImpl.output.HttpStatusCode 200) (eq .global.NewVMFromTemplateImpl.output.TaskId \"\") }}",
              "Message": "Virtual machine {{.global.task.input.Name}} already exists. Skip all other steps.",
              "ObjectType": "workflow.Outcome",
              "Type": "SkipToSuccess"
            },
            {
              "Condition": "true",
              "Message": "Provision virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Name",
                "ObjectType": "content.Parameter",
                "Path": "$.Name",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "CPUs",
                "ObjectType": "content.Parameter",
                "Path": "$.CPUs",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "GpuConfigs",
                "ObjectType": "content.Parameter",
                "Path": "$.GpuConfigs",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Memory",
                "ObjectType": "content.Parameter",
                "Path": "$.Memory",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Datacenter",
                "ObjectType": "content.Parameter",
                "Path": "$.Datacenter",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Folder",
                "ObjectType": "content.Parameter",
                "Path": "$.Folder",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Cluster",
                "ObjectType": "content.Parameter",
                "Path": "$.Cluster",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Host",
                "ObjectType": "content.Parameter",
                "Path": "$.Host",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "ResourcePool",
                "ObjectType": "content.Parameter",
                "Path": "$.ResourcePool",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Datastore",
                "ObjectType": "content.Parameter",
                "Path": "$.Datastore",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Annotation",
                "ObjectType": "content.Parameter",
                "Path": "$.Annotation",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Template",
                "ObjectType": "content.Parameter",
                "Path": "$.Template",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "PowerOn",
                "ObjectType": "content.Parameter",
                "Path": "$.PowerOn",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "TaskId",
                "ObjectType": "content.Parameter",
                "Path": "$.TaskId",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Timeout": 180,
          "Url": "/task/Execute/NewVMFromTemplate"
        },
        {
          "Body": " { \"TaskId\": \"{{.global.NewVMFromTemplateImpl.output.TaskId}}\", \"EntityInventoryPath\": \"{{.global.NewVMFromTemplateImpl.output.Template}}\", \"EntityType\": \"VIRTUAL-MACHINE\" }",
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "POST",
          "Name": "WatchProvisionVMStatus",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{if (ContainsString .global.WatchProvisionVMStatus.output.Status \"running\")}}true{{end}}",
              "Message": "New virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchProvisionVMStatus.output.Status \"queued\")}}true{{end}}",
              "Message": "New virtual machine execution is in progress.",
              "ObjectType": "workflow.Outcome",
              "Type": "Status"
            },
            {
              "Condition": "{{eq .global.WatchProvisionVMStatus.output.HttpStatusCode 200}}",
              "Message": "Virtual Machine '{{.global.task.input.Name}}' created successfully.",
              "ObjectType": "workflow.Outcome"
            },
            {
              "Condition": "{{if (ContainsString .global.WatchProvisionVMStatus.output.HttpStatusMsg \"Task Failed\")}}true{{end}}",
              "Message": "Failed to provision virtual machine '{{.global.task.input.Name}}'. Message: {{ .global.WatchProvisionVMStatus.output.Error }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            },
            {
              "Condition": "{{eq .global.WatchProvisionVMStatus.output.HttpStatusCode 400}}",
              "Message": "Failed to provision virtual machine '{{.global.task.input.Name}}'. Message: {{ .global.WatchProvisionVMStatus.output.HttpStatusMsg }}",
              "ObjectType": "workflow.Outcome",
              "Type": "TerminalError"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Progress",
                "ObjectType": "content.Parameter",
                "Path": "$.Progress",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Status",
                "ObjectType": "content.Parameter",
                "Path": "$.Status",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "CompletionTime",
                "ObjectType": "content.Parameter",
                "Path": "$.CompletionTime",
                "Secure": false,
                "Type": "simple"
              },
              {
                "AcceptSingleValue": false,
                "ComplexType": "",
                "ItemType": "simple",
                "Name": "Error",
                "ObjectType": "content.Parameter",
                "Path": "$.Error",
                "Secure": false,
                "Type": "simple"
              }
            ],
            "Types": []
          },
          "TargetType": "Endpoint",
          "Timeout": 180,
          "Url": "/task/Execute/TaskMonitor"
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Create new virtual machine from template or Clone from Virtual Machine",
      "Name": "NewVMFromTemplateImpl",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {
        "Cluster": "{{.global.NewVMFromTemplateImpl.output.Cluster}}",
        "Datacenter": "{{.global.NewVMFromTemplateImpl.output.Datacenter}}",
        "Folder": "{{if .global.task.input.Folder}}{{.global.task.input.Folder}}{{end}}",
        "Host": "{{.global.NewVMFromTemplateImpl.output.Host}}",
        "Name": "{{if .global.task.input.Folder}}{{.global.task.input.Folder}}/{{.global.NewVMFromTemplateImpl.output.Name}}{{else}}{{.global.NewVMFromTemplateImpl.output.Datacenter}}/vm/{{.global.NewVMFromTemplateImpl.output.Name}}{{end}}",
        "TaskId": "{{.global.NewVMFromTemplateImpl.output.TaskId}}",
        "Template": "{{.global.NewVMFromTemplateImpl.output.Template}}",
        "VirtualizationPlatformType": "{\"VirtualizationPlatformType\": \"VmwareVcenter\",\"VM\": \"{{if .global.task.input.Folder}}{{.global.task.input.Folder}}/{{.global.NewVMFromTemplateImpl.output.Name}}{{else}}{{.global.NewVMFromTemplateImpl.output.Datacenter}}/vm/{{.global.NewVMFromTemplateImpl.output.Name}}{{end}}\",\"Datacenter\": \"{{.global.NewVMFromTemplateImpl.output.Datacenter}}\",\"Folder\": \"{{if .global.task.input.Folder}}{{.global.task.input.Folder}}{{end}}\",\"ForceDelete\": true}"
      },
      "RetryFromFailedApi": true,
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"NewVMFromTemplateImpl\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  },
  {
    "Body": {
      "Batch": [
        {
          "Body": "{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",  {{if .global.task.input.Folder}}\"Folder\":\"{{.global.task.input.Folder}}\",{{ else }}\"Folder\": \"\",{{end}}      \"VmName\":\"{{.global.task.input.VmName}}\",  {{if .global.task.input.Name}}\"Name\":\"{{.global.task.input.Name}}\",{{ else }}\"Name\": \"\",{{end}}  \"TimeZone\":\"{{.global.task.input.TimeZone}}\", {{if .global.task.input.Domain}}\"Domain\":\"{{.global.task.input.Domain}}\",{{ else }}\"Domain\": \"\",{{end}}  \"NetworkInterfaces1\":{{.global.task.input.NetworkInterfaces1 | ToJson}}, \"DnsServers\":{{.global.task.input.DnsServers | ToJson}}, \"DnsSuffixes\":{{.global.task.input.DnsSuffixes | ToJson}}  }",
          "ContentType": "json",
          "EndpointRequestType": "Internal",
          "Method": "POST",
          "Name": "NewGuestCustomizationforLinuxImpl",
          "ObjectType": "workflow.WebApi",
          "Outcomes": [
            {
              "Condition": "{{(ne .global.NewGuestCustomizationforLinuxImpl.output.HttpStatusCode 200)}}",
              "Error": true,
              "Message": "{{.global.NewGuestCustomizationforLinuxImpl.output.HttpStatusMsg}}",
              "ObjectType": "workflow.Outcome"
            },
            {
              "Condition": "true",
              "Message": "Customization successfully triggered for the virtual machine '{{.global.NewGuestCustomizationforLinuxImpl.output.vmConfig.VM}}'.",
              "ObjectType": "workflow.Outcome"
            }
          ],
          "Protocol": "https",
          "ResponseSpec": {
            "ErrorParameters": [],
            "ObjectType": "content.Grammar",
            "Parameters": [
              {
                "AcceptSingleValue": false,
                "ComplexType": "VmConfig",
                "ItemType": "simple",
                "Name": "vmConfig",
                "ObjectType": "content.Parameter",
                "Path": "$",
                "Secure": false,
                "Type": "complex"
              }
            ],
            "Types": [
              {
                "Name": "VmConfig",
                "ObjectType": "content.ComplexType",
                "Parameters": [
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "TimeZone",
                    "ObjectType": "content.Parameter",
                    "Path": "$.TimeZone",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "VmName",
                    "ObjectType": "content.Parameter",
                    "Path": "$.VmName",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "VMId",
                    "ObjectType": "content.Parameter",
                    "Path": "$.VMId",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Name",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Name",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "VM",
                    "ObjectType": "content.Parameter",
                    "Path": "$.VM",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Datacenter",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Datacenter",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Folder",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Folder",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "DnsSuffixes",
                    "ObjectType": "content.Parameter",
                    "Path": "$.DnsSuffixes",
                    "Secure": false,
                    "Type": "collection"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "DnsServers",
                    "ObjectType": "content.Parameter",
                    "Path": "$.DnsServers",
                    "Secure": false,
                    "Type": "collection"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "NetworkInterface",
                    "ItemType": "complex",
                    "Name": "NetworkInterfaces",
                    "ObjectType": "content.Parameter",
                    "Path": "$.NetworkInterfaces",
                    "Secure": false,
                    "Type": "collection"
                  }
                ]
              },
              {
                "Name": "NetworkInterface",
                "ObjectType": "content.ComplexType",
                "Parameters": [
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Ipv4Address",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Ipv4Address",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Ipv4subnetmask",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Ipv4subnetmask",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Ipv6subnetmask",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Ipv6subnetmask",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Ipv6Address",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Ipv6Address",
                    "Secure": false,
                    "Type": "simple"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Ipv4Gateway",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Ipv4Gateway",
                    "Secure": false,
                    "Type": "collection"
                  },
                  {
                    "AcceptSingleValue": false,
                    "ComplexType": "",
                    "ItemType": "simple",
                    "Name": "Ipv6Gateway",
                    "ObjectType": "content.Parameter",
                    "Path": "$.Ipv6Gateway",
                    "Secure": false,
                    "Type": "collection"
                  }
                ]
              }
            ]
          },
          "TargetType": "Endpoint",
          "Timeout": 180,
          "Url": "/task/Execute/GuestCustomization"
        }
      ],
      "CancelAction": [],
      "ClassId": "workflow.BatchApiExecutor",
      "Constraints": {
        "ObjectType": "workflow.TaskConstraints"
      },
      "Description": "Guest Customization for virtual machine",
      "Name": "NewGuestCustomizationforLinuxImpl",
      "ObjectType": "workflow.BatchApiExecutor",
      "Output": {
        "vmConfig": "{{.global.NewGuestCustomizationforLinuxImpl.output.vmConfig | ToJson}}"
      },
      "SharedScope": "shared",
      "TaskDefinition": {
        "ObjectType": "workflow.TaskDefinition",
        "Selector": "Name eq \"NewGuestCustomizationforLinuxImpl\" and Version eq 1"
      }
    },
    "ClassId": "bulk.RestSubRequest",
    "ObjectType": "bulk.RestSubRequest",
    "TargetMoid": "",
    "Uri": "/v1/workflow/BatchApiExecutors",
    "Verb": "POST"
  }
]